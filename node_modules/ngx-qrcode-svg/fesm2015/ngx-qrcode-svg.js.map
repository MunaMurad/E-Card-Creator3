{"version":3,"file":"ngx-qrcode-svg.js","sources":["../../../projects/ngx-qrcode-svg/src/lib/ngx-qrcode-svg.component.ts","../../../projects/ngx-qrcode-svg/src/lib/ngx-qrcode-svg.module.ts","../../../projects/ngx-qrcode-svg/src/public-api.ts","../../../projects/ngx-qrcode-svg/src/ngx-qrcode-svg.ts"],"sourcesContent":["import { Component, Input, ElementRef, OnChanges, Renderer2 } from '@angular/core';\nimport QRCode from 'qrcode';\nimport { ErrorCorrectionLevel, QRCodeData, Options } from './ngx-qrcode-svg.types';\n\n@Component({\n  selector: 'qrcode-svg',\n  template: '',\n  styles: [\n    `\n      :host {\n        display: inline-block;\n        width: 100%;\n        height: 100%;\n      }\n      svg {\n        display: block;\n        shape-rendering: crispEdges;\n      }\n    `,\n  ],\n})\nexport class QRCodeSVGComponent implements OnChanges {\n  @Input() value: string;\n  @Input() errorCorrectionLevel?: ErrorCorrectionLevel;\n  @Input() margin?: number | string;\n  @Input() color?: string;\n  @Input() backgroundColor?: string;\n\n  readonly default: Options = {\n    errorCorrectionLevel: 'Q',\n    margin: 4,\n    color: 'currentcolor',\n    backgroundColor: 'transparent',\n  };\n\n  constructor(private renderer: Renderer2, private element: ElementRef) {}\n\n  ngOnChanges() {\n    this.createQRCode();\n  }\n\n  private createQRCode(): void {\n    this.element.nativeElement.childNodes.forEach((node) =>\n      this.renderer.removeChild(this.element.nativeElement, node)\n    );\n\n    if (!this.value) {\n      return;\n    }\n\n    const { errorCorrectionLevel, margin, color, backgroundColor } = this.sanitizeInputs();\n\n    const raw = QRCode.create(`${this.value}`, {\n      errorCorrectionLevel,\n      margin,\n    });\n    this.renderSVG(raw, margin, color, backgroundColor);\n  }\n\n  private renderSVG(raw: QRCodeData, margin: number, color: string, backgroundColor: string): void {\n    const elementSize = raw.modules.size + margin * 2;\n\n    const svgElement = this.renderer.createElement('svg', 'svg');\n    this.renderer.setAttribute(svgElement, 'xmlns', 'http://www.w3.org/2000/svg');\n    this.renderer.setAttribute(svgElement, 'viewBox', `0 0 ${elementSize} ${elementSize}`);\n\n    const backGroundElement = this.renderer.createElement('path', 'svg');\n    this.renderer.setAttribute(backGroundElement, 'd', `M0 0h${elementSize}v${elementSize}H0z`);\n    this.renderer.setStyle(backGroundElement, 'fill', backgroundColor);\n    this.renderer.appendChild(svgElement, backGroundElement);\n\n    const codeElement = this.renderer.createElement('path', 'svg');\n    this.renderer.setAttribute(codeElement, 'd', this.createPath(raw, margin));\n    this.renderer.setStyle(codeElement, 'stroke', color);\n    this.renderer.appendChild(svgElement, codeElement);\n\n    this.renderer.appendChild(this.element.nativeElement, svgElement);\n  }\n\n  private createPath(raw: QRCodeData, margin: number): string {\n    const { data, size } = raw.modules;\n\n    let path = '';\n    let moveBy = 0;\n    let newRow = false;\n    let lineLength = 0;\n\n    data.forEach((bit, index) => {\n      const col = Math.floor(index % size);\n      const row = Math.floor(index / size);\n\n      if (!col && !newRow) {\n        newRow = true;\n      }\n\n      if (bit) {\n        lineLength++;\n\n        if (!(index > 0 && col > 0 && data?.[index - 1])) {\n          path += newRow ? `M${col + margin} ${0.5 + row + margin}` : `m${moveBy} 0`;\n          moveBy = 0;\n          newRow = false;\n        }\n\n        if (!(col + 1 < size && data?.[index + 1])) {\n          path += `h${lineLength}`;\n          lineLength = 0;\n        }\n      } else {\n        moveBy++;\n      }\n    });\n\n    return path;\n  }\n\n  private sanitizeInputs(): Options {\n    const errorCorrectionLevel = ['L', 'M', 'Q', 'H'].includes(this.errorCorrectionLevel)\n      ? this.errorCorrectionLevel\n      : this.default.errorCorrectionLevel;\n\n    const margin =\n      !isNaN(parseFloat(this.margin as any)) && !isNaN(Number(this.margin))\n        ? Math.max(Number(this.margin), 0)\n        : this.default.margin;\n\n    const color = this.color ?? this.default.color;\n    const backgroundColor = this.backgroundColor ?? this.default.backgroundColor;\n\n    return { errorCorrectionLevel, margin, color, backgroundColor };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { QRCodeSVGComponent } from './ngx-qrcode-svg.component';\n\n@NgModule({\n  declarations: [QRCodeSVGComponent],\n  imports: [],\n  exports: [QRCodeSVGComponent],\n})\nexport class QRCodeSVGModule {}\n","/*\n * Public API Surface of ngx-qrcode-svg\n */\n\nexport * from './lib/ngx-qrcode-svg.component';\nexport * from './lib/ngx-qrcode-svg.module';\nexport { ErrorCorrectionLevel } from './lib/ngx-qrcode-svg.types';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}