{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappingssourcesContent":["import { IonicNativePlugin } from '@ionic-native/core';\n/**\n * @name Social Sharing\n * @premier social-sharing\n * @description\n * Share text, files, images, and links via social networks, sms, and email.\n *\n * For Browser usage check out the Web Share API docs: https://github.com/EddyVerbruggen/SocialSharing-PhoneGap-Plugin#5-web-share-api\n *\n * @usage\n * ```typescript\n * import { SocialSharing } from '@ionic-native/social-sharing/ngx';\n *\n * constructor(private socialSharing: SocialSharing) { }\n *\n * ...\n *\n * // Check if sharing via email is supported\n * this.socialSharing.canShareViaEmail().then(() => {\n *   // Sharing via email is possible\n * }).catch(() => {\n *   // Sharing via email is not possible\n * });\n *\n * // Share via email\n * this.socialSharing.shareViaEmail('Body', 'Subject', ['recipient@example.org']).then(() => {\n *   // Success!\n * }).catch(() => {\n *   // Error!\n * });\n * ```\n */\nexport declare class SocialSharing extends IonicNativePlugin {\n    /**\n     * Shares using the share sheet\n     * @param message {string} The message you would like to share.\n     * @param subject {string} The subject\n     * @param file {string|string[]} URL(s) to file(s) or image(s), local path(s) to file(s) or image(s), or base64 data of an image. Only the first file/image will be used on Windows Phone.\n     * @param url {string} A URL to share\n     * @returns {Promise<any>}\n     */\n    share(message?: string, subject?: string, file?: string | string[], url?: string): Promise<any>;\n    /**\n     * Shares using the share sheet with additional options and returns a result object or an error message (requires plugin version 5.1.0+)\n     * @param options {object} The options object with the message, subject, files, url and chooserTitle properties.\n     * @returns {Promise<any>}\n     */\n    shareWithOptions(options: {\n        message?: string;\n        subject?: string;\n        files?: string | string[];\n        url?: string;\n        chooserTitle?: string;\n    }): Promise<any>;\n    /**\n     * Checks if you can share via a specific app.\n     * @param appName {string} App name or package name. Examples: instagram or com.apple.social.facebook\n     * @param message {string}\n     * @param subject {string}\n     * @param image {string}\n     * @param url {string}\n     * @returns {Promise<any>}\n     */\n    canShareVia(appName: string, message?: string, subject?: string, image?: string, url?: string): Promise<any>;\n    /**\n     * Shares directly to Twitter\n     * @param message {string}\n     * @param image {string}\n     * @param url {string}\n     * @returns {Promise<any>}\n     */\n    shareViaTwitter(message: string, image?: string, url?: string): Promise<any>;\n    /**\n     * Shares directly to Facebook\n     * @param message {string}\n     * @param image {string}\n     * @param url {string}\n     * @returns {Promise<any>}\n     */\n    shareViaFacebook(message: string, image?: string, url?: string): Promise<any>;\n    /**\n     * Shares directly to Facebook with a paste message hint\n     * @param message {string}\n     * @param image {string}\n     * @param url {string}\n     * @param pasteMessageHint {string}\n     * @returns {Promise<any>}\n     */\n    shareViaFacebookWithPasteMessageHint(message: string, image?: string, url?: string, pasteMessageHint?: string): Promise<any>;\n    /**\n     * Shares directly to Instagram\n     * @param message {string}\n     * @param image {string}\n     * @returns {Promise<any>}\n     */\n    shareViaInstagram(message: string, image: string): Promise<any>;\n    /**\n     * Shares directly to WhatsApp\n     * @param message {string}\n     * @param image {string}\n     * @param url {string}\n     * @returns {Promise<any>}\n     */\n    shareViaWhatsApp(message: string, image?: string, url?: string): Promise<any>;\n    /**\n     * Shares directly to a WhatsApp Contact\n     * @param receiver {string} Pass phone number on Android, and Addressbook ID (abid) on iOS\n     * @param message {string} Message to send\n     * @param image {string} Image to send (does not work on iOS\n     * @param url {string} Link to send\n     * @returns {Promise<any>}\n     */\n    shareViaWhatsAppToReceiver(receiver: string, message: string, image?: string, url?: string): Promise<any>;\n    /**\n     * Share via SMS\n     * @param messge {string} message to send\n     * @param phoneNumber {string} Number or multiple numbers seperated by commas\n     * @returns {Promise<any>}\n     */\n    shareViaSMS(messge: string, phoneNumber: string): Promise<any>;\n    /**\n     * Checks if you can share via email\n     * @returns {Promise<any>}\n     */\n    canShareViaEmail(): Promise<any>;\n    /**\n     * Share via Email\n     * @param message {string}\n     * @param subject {string}\n     * @param to {string[]}\n     * @param cc {string[]} Optional\n     * @param bcc {string[]} Optional\n     * @param files {string|string[]} Optional URL or local path to file(s) to attach\n     * @returns {Promise<any>}\n     */\n    shareViaEmail(message: string, subject: string, to: string[], cc?: string[], bcc?: string[], files?: string | string[]): Promise<any>;\n    /**\n     * Share via AppName\n     * @param appName {string} App name or package name. Examples: instagram or com.apple.social.facebook\n     * @param message {string}\n     * @param subject {string}\n     * @param image {string}\n     * @param url {string}\n     * @returns {Promise<any>}\n     */\n    shareVia(appName: string, message: string, subject?: string, image?: string, url?: string): Promise<any>;\n    /**\n     * defines the popup position before call the share method.\n     * @param targetBounds {string} left, top, width, height\n     */\n    setIPadPopupCoordinates(targetBounds: string): void;\n    /**\n     * Save an array of images to the camera roll\n     * @param  {string|string[]} fileOrFileArray Single or multiple files\n     * @returns {Promise<any> }\n     */\n    saveToPhotoAlbum(fileOrFileArray: string | string[]): Promise<any>;\n    /**\n     * Shares directly to a WhatsApp Contact with phone number.\n     * @param phone {string} Pass phone number\n     * @param message {string} Message to send\n     * @param fileOrFileArray fileOrFileArray Single or multiple files\n     * @param url {string} Link to send\n     * @returns {Promise<any>}\n     */\n    shareViaWhatsAppToPhone(phone: string, message: string, fileOrFileArray: string | string[], url?: string): Promise<any>;\n}\n"]}