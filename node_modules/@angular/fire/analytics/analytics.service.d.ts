import { NgZone, OnDestroy, ComponentFactoryResolver, Injector } from '@angular/core';
import { Router } from '@angular/router';
import { AngularFireAnalytics } from './analytics';
import { Title } from '@angular/platform-browser';
import * as ɵngcc0 from '@angular/core';
export declare class ScreenTrackingService implements OnDestroy {
    private disposable;
    constructor(analytics: AngularFireAnalytics, router: Router, title: Title, componentFactoryResolver: ComponentFactoryResolver, platformId: Object, debugModeEnabled: boolean | null, zone: NgZone, injector: Injector);
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScreenTrackingService, [null, { optional: true; }, { optional: true; }, null, null, { optional: true; }, null, null]>;
    static ɵprov: ɵngcc0.ɵɵInjectableDeclaration<ScreenTrackingService>;
}
export declare class UserTrackingService implements OnDestroy {
    private disposable;
    constructor(analytics: AngularFireAnalytics, zone: NgZone, platformId: Object);
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<UserTrackingService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDeclaration<UserTrackingService>;
}

//# sourceMappingURL=analytics.service.d.ts.map