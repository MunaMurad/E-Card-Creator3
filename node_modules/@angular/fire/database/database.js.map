{"version":3,"file":"database.js","sources":["../../../src/database/database.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAElF,OAAO,EAAE,MAAM,EAAE,MAAM,SAAS,CAAC;AACjC,OAAO,EAAE,mBAAmB,EAAE,MAAM,yBAAyB,CAAC;AAC9D,OAAO,EAAE,qBAAqB,EAAE,MAAM,2BAA2B,CAAC;AAClE,OAAO,EAAwD,mBAAmB,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,YAAY,EAAE,mBAAmB,EAAE,8BAA8B,EAAE,sBAAsB,EAAE,MAAM,eAAe,CAAC;AAI1O;AACM,IAKJ,6BAC4B,OAAuB,EACV,YAAoD,EACzD,WAAuB,EACpC,UAAkB,EACvC,IAAY;AACb,QACC,IAAI,CAAC,UAAU,GAAG,IAAI,sBAAsB,CAAC,IAAI,CAAC,CAAC;AACvD,QAAI,IAAI,CAAC,sBAAsB,GAAG,8BAA8B,CAAC,IAAI,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;AAC9F,QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC;AACrC,YAAA,IAAM,GAAG,GAAG,mBAAmB,CAAC,OAAO,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;AACnE,YAAM,OAAO,GAAG,CAAC,QAAQ,CAAC,WAAW,IAAI,SAAS,CAAC,CAAC;AACpD,QAAI,CAAC,CAAC,CAAC;AACP,IAAE,CAAC;AACH,IACE,kCAAI,GAAJ,UAAQ,SAAwB,EAAE,OAAiB;AAAI,QACrD,IAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;AACjD,QAAI,IAAI,KAAK,GAAkB,GAAG,CAAC;AACnC,QAAI,IAAG,OAAO,EAAE;AAChB,YAAM,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;AAC3B,SAAK;AACL,QAAI,OAAO,mBAAmB,CAAI,KAAK,EAAE,IAAI,CAAC,CAAC;AAC/C,IAAE,CAAC;AAEH,IAAE,oCAAM,GAAN,UAAU,SAAwB;AAAI,QACpC,IAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;AACjD,QAAI,OAAO,qBAAqB,CAAI,GAAG,EAAE,IAAI,CAAC,CAAC;AAC/C,IAAE,CAAC;AAEH,IAAE,0CAAY,GAAZ;AAAc,QACZ,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC;AAC1C,IAAE,CAAC;AAEH,IAxCa,mBAAmB,wBAD/B,UAAU,EAAE,rBACL,CAOH,WAAA,MAAM,CAAC,gBAAgB,CAAC,CAAA;AAAE,QAC1B,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,MAAM,CAAC,iBAAiB,CAAC,CAAA;AAAE,QACvC,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,MAAM,CAAC,YAAY,CAAC,CAAA;AAAE,QAClC,WAAA,MAAM,CAAC,WAAW,CAAC,CAAA;AAAE,iEAAW,MAAM;AAC3C,YAAU,MAAM;AACd,OAZW,mBAAmB,CAwC/B;;;;;;;;;;;;;;;;;;;;;2DACD;AACA,IAFA,0BAAC;AAED,CAFC,AAxCD,IAwCC;AACD,SAzCa,mBAAmB;AAuDhC,OAAO,EAAE,mBAAmB,EAAE,YAAY,EAAE,YAAY,IAAI,GAAG,EAAE,CAAC;AAClE","sourcesContent":["import { Injectable, Inject, Optional, NgZone, PLATFORM_ID } from '@angular/core';\nimport { DatabaseQuery, PathReference, QueryFn, AngularFireList, AngularFireObject } from './interfaces';\nimport { getRef } from './utils';\nimport { createListReference } from './list/create-reference';\nimport { createObjectReference } from './object/create-reference';\nimport { FirebaseDatabase, FirebaseOptions, FirebaseAppConfig, RealtimeDatabaseURL, FIREBASE_OPTIONS, FIREBASE_APP_NAME, DATABASE_URL, _firebaseAppFactory, ɵkeepUnstableUntilFirstFactory, ɵAngularFireSchedulers } from '@angular/fire';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AngularFireDatabase {\n  public readonly database: FirebaseDatabase;\n\n  public readonly schedulers: ɵAngularFireSchedulers;\n  public readonly keepUnstableUntilFirst: <T>(obs$: Observable<T>) => Observable<T>;\n\n  constructor(\n    @Inject(FIREBASE_OPTIONS) options:FirebaseOptions,\n    @Optional() @Inject(FIREBASE_APP_NAME) nameOrConfig:string|FirebaseAppConfig|null|undefined,\n    @Optional() @Inject(DATABASE_URL) databaseURL:string|null,\n    @Inject(PLATFORM_ID) platformId: Object,\n    zone: NgZone\n  ) {\n    this.schedulers = new ɵAngularFireSchedulers(zone);\n    this.keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(this.schedulers, platformId);\n\n    this.database = zone.runOutsideAngular(() => {\n      const app = _firebaseAppFactory(options, zone, nameOrConfig);\n      return app.database(databaseURL || undefined);\n    });\n  }\n\n  list<T>(pathOrRef: PathReference, queryFn?: QueryFn): AngularFireList<T> {\n    const ref = getRef(this.database, pathOrRef);\n    let query: DatabaseQuery = ref;\n    if(queryFn) {\n      query = queryFn(ref);\n    }\n    return createListReference<T>(query, this);\n  }\n\n  object<T>(pathOrRef: PathReference): AngularFireObject<T>  {\n    const ref = getRef(this.database, pathOrRef);\n    return createObjectReference<T>(ref, this);\n  }\n\n  createPushId() {\n    return this.database.ref().push().key;\n  }\n\n}\n\nexport {\n  PathReference,\n  DatabaseSnapshot,\n  ChildEvent,\n  ListenEvent,\n  QueryFn,\n  AngularFireList,\n  AngularFireObject,\n  AngularFireAction,\n  Action,\n  SnapshotAction\n} from './interfaces';\n\nexport { RealtimeDatabaseURL, DATABASE_URL, DATABASE_URL as URL };\n"]}