{"version":3,"file":"performance.js","sources":["../../../src/performance/performance.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, NgZone, ApplicationRef, InjectionToken, Inject, Optional } from '@angular/core';\nimport { Observable, Subscription, from } from 'rxjs';\nimport { first, tap, map, shareReplay, switchMap } from 'rxjs/operators';\nimport { performance } from 'firebase/app';\nimport { FirebaseApp } from '@angular/fire';\n\n// SEMVER @ v6, drop and move core ng metrics to a service\nexport const AUTOMATICALLY_TRACE_CORE_NG_METRICS = new InjectionToken<boolean>('angularfire2.performance.auto_trace');\nexport const INSTRUMENTATION_ENABLED = new InjectionToken<boolean>('angularfire2.performance.instrumentationEnabled');\nexport const DATA_COLLECTION_ENABLED = new InjectionToken<boolean>('angularfire2.performance.dataCollectionEnabled');\n\nexport type TraceOptions = {\n  metrics?: {[key:string]: number},\n  attributes?: {[key:string]:string},\n  attribute$?: {[key:string]:Observable<string>},\n  incrementMetric$?: {[key:string]: Observable<number|void|null|undefined>},\n  metric$?: {[key:string]: Observable<number>}\n};\n\n@Injectable()\nexport class AngularFirePerformance {\n  \n  performance: Observable<performance.Performance>;\n\n  constructor(\n    app: FirebaseApp,\n    @Optional() @Inject(AUTOMATICALLY_TRACE_CORE_NG_METRICS) automaticallyTraceCoreNgMetrics:boolean|null,\n    @Optional() @Inject(INSTRUMENTATION_ENABLED) instrumentationEnabled:boolean|null,\n    @Optional() @Inject(DATA_COLLECTION_ENABLED) dataCollectionEnabled:boolean|null,\n    appRef: ApplicationRef,\n    private zone: NgZone\n  ) {\n    \n    // @ts-ignore zapping in the UMD in the build script\n    const requirePerformance = from(zone.runOutsideAngular(() => import('firebase/performance')));\n\n    this.performance = requirePerformance.pipe(\n      // SEMVER while < 6 need to type, drop next major\n      map(() => zone.runOutsideAngular(() => <performance.Performance>app.performance())),\n      tap(performance => {\n        if (instrumentationEnabled == false) { performance.instrumentationEnabled = false }\n        if (dataCollectionEnabled == false) { performance.dataCollectionEnabled = false }\n      }),\n      shareReplay(1)\n    );\n\n    if (automaticallyTraceCoreNgMetrics != false) {\n\n      // TODO determine more built in metrics\n      // this leaks...\n      appRef.isStable.pipe(\n        first(it => it),\n        this.traceUntilComplete('isStable')\n      ).subscribe();\n\n    }\n\n  }\n\n  trace$ = (name:string, options?: TraceOptions) =>\n    this.performance.pipe(\n      switchMap(performance =>\n        new Observable<void>(emitter =>\n          this.zone.runOutsideAngular(() => {\n            const trace = performance.trace(name);\n            options && options.metrics && Object.keys(options.metrics).forEach(metric => {\n              trace.putMetric(metric, options!.metrics![metric])\n            });\n            options && options.attributes && Object.keys(options.attributes).forEach(attribute => {\n              trace.putAttribute(attribute, options!.attributes![attribute])\n            });\n            const attributeSubscriptions = options && options.attribute$ ? Object.keys(options.attribute$).map(attribute =>\n              options!.attribute$![attribute].subscribe(next => trace.putAttribute(attribute, next))\n            ) : [];\n            const metricSubscriptions = options && options.metric$ ? Object.keys(options.metric$).map(metric =>\n              options!.metric$![metric].subscribe(next => trace.putMetric(metric, next))\n            ) : [];\n            const incrementOnSubscriptions = options && options.incrementMetric$ ? Object.keys(options.incrementMetric$).map(metric =>\n              options!.incrementMetric$![metric].subscribe(next => trace.incrementMetric(metric, next || undefined))\n            ) : [];\n            emitter.next(trace.start());\n            return { unsubscribe: () => {\n              trace.stop();\n              metricSubscriptions.forEach(m => m.unsubscribe());\n              incrementOnSubscriptions.forEach(m => m.unsubscribe());\n              attributeSubscriptions.forEach(m => m.unsubscribe());\n            }};\n          })\n        )\n      )\n    );\n\n  traceUntil = <T=any>(name:string, test: (a:T) => boolean, options?: TraceOptions & { orComplete?: boolean }) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n    const traceSubscription = this.trace$(name, options).subscribe();\n    return source$.pipe(\n      tap(\n        a  => test(a) && traceSubscription.unsubscribe(),\n        () => {},\n        () => options && options.orComplete && traceSubscription.unsubscribe()\n      )\n    ).subscribe(subscriber);\n  });\n\n  traceWhile = <T=any>(name:string, test: (a:T) => boolean, options?: TraceOptions & { orComplete?: boolean}) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n    let traceSubscription: Subscription|undefined;\n    return source$.pipe(\n      tap(\n        a  => {\n          if (test(a)) {\n            traceSubscription = traceSubscription || this.trace$(name, options).subscribe();\n          } else {\n            traceSubscription && traceSubscription.unsubscribe();\n            traceSubscription = undefined;\n          }\n        },\n        () => {},\n        () => options && options.orComplete && traceSubscription && traceSubscription.unsubscribe()\n      )\n    ).subscribe(subscriber);\n  });\n\n  traceUntilComplete = <T=any>(name:string, options?: TraceOptions) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n    const traceSubscription = this.trace$(name, options).subscribe();\n    return source$.pipe(\n      tap(\n        () => {},\n        () => {},\n        () => traceSubscription.unsubscribe()\n      )\n    ).subscribe(subscriber);\n  });\n\n  traceUntilFirst = <T=any>(name:string, options?: TraceOptions) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n    const traceSubscription = this.trace$(name, options).subscribe();\n    return source$.pipe(\n      tap(\n        () => traceSubscription.unsubscribe(),\n        () => {},\n        () => {}\n      )\n    ).subscribe(subscriber);\n  });\n\n  trace = <T=any>(name:string, options?: TraceOptions) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n    const traceSubscription = this.trace$(name, options).subscribe();\n    return source$.pipe(\n      tap(\n        () => traceSubscription.unsubscribe(),\n        () => {},\n        () => traceSubscription.unsubscribe()\n      )\n    ).subscribe(subscriber);\n  });\n\n}\n"]}