{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Base64ToGallery } from '@ionic-native/base64-to-gallery/ngx';\nimport { UserService } from './../../services/user.service';\nimport { InvitationService } from '../../services/InvitationService';\nimport { InvitationDetails } from './InvitationDetails';\nimport { Meta } from '@angular/platform-browser';\nimport { ModalController, AlertController, ToastController } from '@ionic/angular';\nimport ImageEditor from 'tui-image-editor';\nimport { en } from '../image-editor/en';\nimport { ActivatedRoute } from '@angular/router';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { EncryptionService } from 'src/app/services/encryption.service';\nimport { Storage } from '@ionic/storage'; // this imports for the alert in back-button\n\nimport { Router } from '@angular/router';\nimport { SocialSharePage } from 'src/app/social-share/social-share.page';\nimport * as $ from 'jquery';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic-native/base64-to-gallery/ngx\";\nimport * as i2 from \"@angular/fire/firestore\";\nimport * as i3 from \"./../../services/user.service\";\nimport * as i4 from \"@angular/fire/auth\";\nimport * as i5 from \"@ionic/angular\";\nimport * as i6 from \"src/app/services/encryption.service\";\nimport * as i7 from \"@angular/platform-browser\";\nimport * as i8 from \"../../services/InvitationService\";\nimport * as i9 from \"@angular/router\";\nimport * as i10 from \"@ionic/storage\";\nimport * as i11 from \"ngx-qrcode-svg\";\nimport * as i12 from \"@angular/common\";\nimport * as i13 from \"@ngx-translate/core\";\n\nconst _c0 = function () {\n  return {\n    \"display\": \"none\"\n  };\n};\n\nexport let ImageEditorPage = /*#__PURE__*/(() => {\n  class ImageEditorPage {\n    constructor(base64ToGallery, firestore, userService, fireAuth, modalCtrl, encryptionService, alertCtrl, meta, qrServices, route, storage, alertController, _Router, toastCtrl) {\n      this.base64ToGallery = base64ToGallery;\n      this.firestore = firestore;\n      this.userService = userService;\n      this.fireAuth = fireAuth;\n      this.modalCtrl = modalCtrl;\n      this.encryptionService = encryptionService;\n      this.alertCtrl = alertCtrl;\n      this.meta = meta;\n      this.qrServices = qrServices;\n      this.route = route;\n      this.storage = storage;\n      this.alertController = alertController;\n      this._Router = _Router;\n      this.toastCtrl = toastCtrl;\n      this.locale_ar = en;\n      this.showModal = false;\n      this.qrDetails = new InvitationDetails();\n      this.iconColor = '#000000'; // addQrBtn = '<button id=\"tui-image-editor-addQr-btn\">Add QR</button>';\n      // editBtn = `<button id=\"tui-image-editor-edit-btn\">Edit QR</button>`;\n\n      this.editBtn = `<li tooltip-content=\"Edit QR\" class=\"tui-image-editor-edit-btn tui-image-editor-item help\" id=\"tui-image-editor-edit-btn\">\n  <img src=\"assets/icon/editQr.jpg\"  width = 20px height = 20px />\n  </li>`;\n      this.addQrBtn = `<li tooltip-content=\"Add QR\" class=\"tui-image-editor-addQr-btn tui-image-editor-item help\" id=\"tui-image-editor-addQr-btn\">\n  <img src=\"assets/icon/addQr.png\" width = 20px height = 20px />\n  </li>`;\n      this.downloadBtn = `<li tooltip-content=\"download\" class=\"tui-image-editor-download tui-image-editor-item help\">\n  <img src=\"assets/icon/download.svg\" width = 20px height = 20px />\n  </li>`;\n      this.shareBtn = `<li tooltip-content=\"Share\" class=\"tie-btn-shareAll tui-image-editor-item help social-share-btn\">\n              <img src=\"assets/icon/icons8-share.svg\" width = 20px height = 20px />\n              </li>`;\n      this.QRIconId = '';\n      this.userId = '';\n      this.userAuth = false;\n      this.meta.addTag({\n        name: 'viewport',\n        content: 'width=device-width, user-scalable=no'\n      });\n      this.route.params.subscribe(params => {\n        this.imgSrc = params['imageSrc'];\n      });\n      this.storage.get('userId').then(val => {\n        this.userId = val;\n      });\n      this.storage.get('userAuth').then(val => {\n        this.userAuth = val;\n      });\n    }\n\n    ngOnInit() {\n      var locale_ar = en;\n      this.imageEditor = new ImageEditor(document.querySelector('#tui-image-editor-container'), {\n        usageStatistics: false,\n        includeUI: {\n          loadImage: {\n            path: '../../../' + this.imgSrc,\n            name: 'Invitation Image'\n          },\n          menu: ['resize', 'crop', 'flip', 'rotate', 'text', 'filter', 'shape', 'icon'],\n          initMenu: '',\n          menuBarPosition: 'bottom'\n        },\n        cssMaxWidth: document.documentElement.clientWidth,\n        cssMaxHeight: document.documentElement.clientHeight,\n        selectionStyle: {\n          cornerSize: 30,\n          rotatingPointOffset: 40\n        }\n      }); // Load sample image\n\n      this.imageEditor.loadImageFromURL('img/sampleImage.jpg', 'SampleImage').then(() => {\n        this.imageEditor.clearUndoStack();\n      });\n      new EditorPanZoom(this.imageEditor).enable(); // FIX TOOLTIPS OVER SCROLLBAR\n\n      $('li.tui-image-editor-item').each(function () {\n        var text = $(this).attr('tooltip-content');\n\n        if (text) {\n          var el = $('<span class=\"tooltip\" style=\"display: none\">' + text + '</span>');\n          $(\"body\").append(el);\n          $(this).data('c-tooltip', el);\n        }\n      });\n      $('li.tui-image-editor-item').mouseover(function (event) {\n        var el = $(this).data('c-tooltip');\n\n        if (el) {\n          el.css('top', event.pageY + 'px');\n          el.show();\n        }\n      }).mouseleave(function () {\n        var el = $(this).data('c-tooltip');\n        if (el) $(this).data('c-tooltip').hide();\n      }); //Font select list\n\n      let fontArray = [\"Sakkal Majalla\", \"Akhbar MT\", \"Aldhabi\", \"Simple Indust Outline\", \"Cairo\", \"Dubai\", \"DecoType Naskh\", \"Arial\", \"Arial Black\", \"Caveat\", \"Comic Sans MS\", \"Courier New\", \"Georgia1\", \"Impact\", \"Lobster Two\", \"Lucida Console\", \"Luckiest Guy\", \"Open Sans\", \"Pacifico\", \"Palatino Linotype\", \"Press Start 2P\", \"Roboto\", \"Tahoma\", \"Tangerine\", \"Times New Roman\", \"Tourney\", \"Ultra\", \"Verdana\", \"Symbol\", \"Webdings\", \"Wingdings\"];\n      let fontSelectHTML = '<div class=\"center\">\\n <select #fontselect class=\"center form-select font-selector\">';\n\n      for (let i = 0; i < fontArray.length; i++) {\n        let selected = '';\n\n        if (i == 0) {\n          selected = 'selected';\n        }\n\n        fontSelectHTML += '<option style=\"font-family:' + fontArray[i] + ';\" value=\"' + fontArray[i] + '\" ' + selected + '>' + fontArray[i] + '</option>';\n      }\n\n      fontSelectHTML += '</select></div>\\n \\n <div></div>  <div></div>';\n      let textMenuAlign = document.querySelector('.tui-image-editor-menu-text .tie-text-align-button');\n      textMenuAlign.insertAdjacentHTML('afterbegin', fontSelectHTML);\n      document.querySelector('.font-selector').addEventListener('change', () => this.TUI_updateFontOnText(document.querySelector('.font-selector').value)); //-------------------------------------\n      //ON TUI objectActivated\n\n      this.imageEditor.on('objectActivated', props => {\n        this.TUI_selectedItem = props;\n        this.TUI_updateFontSelected(props);\n      }); // document.querySelector('.tui-image-editor-header-buttons .tui-image-editor-download-btn').insertAdjacentHTML('afterend', this.addQrBtn);\n\n      document.querySelector('.tui-image-editor-header-buttons .tui-image-editor-load-btn').closest('div').hidden = true; //.classList.add('social-share');\n\n      document.querySelector('.tui-image-editor-header-buttons .tui-image-editor-download-btn').closest('div').hidden = true;\n      document.querySelector('.tui-image-editor-container .tie-btn-deleteAll').insertAdjacentHTML('afterend', this.shareBtn);\n      document.querySelector('.tui-image-editor-container .tie-btn-deleteAll').insertAdjacentHTML('afterend', this.downloadBtn);\n      document.querySelector('.tui-image-editor-container .tie-btn-deleteAll').insertAdjacentHTML('afterend', this.addQrBtn);\n      document.querySelector('.social-share-btn').addEventListener('click', e => __awaiter(this, void 0, void 0, function* () {\n        yield this.showShareOptions();\n      }));\n      document.querySelector('.tui-image-editor-container #tui-image-editor-addQr-btn').addEventListener('click', e => __awaiter(this, void 0, void 0, function* () {\n        if (this.userAuth == true) {\n          yield this.presentAlertConfirm();\n          yield this.checkElement('#qrcode > svg > path:nth-child(2)') //use whichever selector you want\n          .then(element => __awaiter(this, void 0, void 0, function* () {\n            var iconAdded = yield this.addQRIcon();\n\n            if (iconAdded) {\n              yield this.addEditButton();\n            }\n          }));\n        } else {\n          this.presentToast('Please sign in to add QR to invitation', 'warning');\n        }\n      })); // document.querySelector('.tui-image-editor-help-menu').classList.remove('top');\n      // document.querySelector('.tui-image-editor-help-menu').classList.add('left');\n\n      document.querySelector('.tui-image-editor-container .tie-btn-deleteAll').insertAdjacentHTML('afterend', this.editBtn);\n      document.getElementById('tui-image-editor-edit-btn').style.display = \"none\";\n      document.querySelector('input[type=\"file\"]').closest('div').style.display = \"none\";\n      document.querySelectorAll('.tui-image-editor-icpartition').forEach(li => {\n        li.closest('li').style.display = 'none';\n      });\n      document.querySelector('#tui-image-editor-edit-btn').addEventListener('click', e => __awaiter(this, void 0, void 0, function* () {\n        yield this.presentAlertUpdate();\n      }));\n      document.querySelector('.tui-image-editor-download').addEventListener('click', e => __awaiter(this, void 0, void 0, function* () {\n        yield this.fileSave();\n      }));\n    }\n\n    fileSave() {\n      this.base64ToGallery.base64ToGallery(this.imageEditor.toDataURL(), {\n        prefix: 'Img',\n        mediaScanner: true\n      }).then(res => console.log('Saved image to gallery ', res), err => console.log('Error saving image to gallery ', err));\n    }\n\n    presentToast(message, type) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const toast = yield this.toastCtrl.create({\n          message: message,\n          duration: 3000,\n          color: type\n        });\n        toast.present();\n      });\n    }\n\n    addEditButton() {\n      return __awaiter(this, void 0, void 0, function* () {\n        document.getElementById('tui-image-editor-addQr-btn').style.display = \"none\";\n        document.getElementById('tui-image-editor-edit-btn').style.display = \"inline-block\";\n      });\n    }\n    /********************************\r\n     * Update font family on text layer\r\n    *******************************/\n\n\n    TUI_updateFontOnText(font) {\n      if (font) {\n        this.TUI_selectedFont = font;\n      }\n\n      if (font && this.TUI_selectedItem) {\n        this.imageEditor.changeTextStyle(this.TUI_selectedItem.id, {\n          fontFamily: font\n        });\n      }\n    }\n    /********************************\r\n     * Update font selected with the fontfamily of the selected layer\r\n    *******************************/\n\n\n    TUI_updateFontSelected(layer) {\n      if (layer.fontFamily) {\n        document.querySelector('.font-selector').value = layer.fontFamily;\n        this.TUI_selectedFont = layer.fontFamily;\n      }\n    }\n\n    presentAlertConfirm() {\n      return __awaiter(this, void 0, void 0, function* () {\n        let alert = yield this.alertCtrl.create({\n          header: 'تفاصيل رمز QR',\n          message: 'الرجاء ادخال تفاصيل الدعوة المطلوبة',\n          inputs: [{\n            name: 'EventName',\n            type: 'text',\n            placeholder: 'عنوان الدعوة'\n          }, {\n            name: 'AttendeesAllowed',\n            type: 'number',\n            placeholder: 'العدد المسموح'\n          }],\n          buttons: [{\n            text: 'Cancel إلغاء',\n            role: 'cancel',\n            handler: data => {}\n          }, {\n            text: 'Register تسجيل',\n            handler: data => __awaiter(this, void 0, void 0, function* () {\n              if (data) {\n                this.qrDetails.EventName = data.EventName;\n                this.qrDetails.UserId = this.userId;\n                this.qrDetails.AttendeesAllowed = Number(data.AttendeesAllowed);\n                this.qrvalue = yield this.CreateCode(this.qrDetails);\n              } else {\n                return false;\n              }\n            })\n          }]\n        });\n        yield alert.present();\n      });\n    }\n\n    presentAlertUpdate() {\n      return __awaiter(this, void 0, void 0, function* () {\n        var invitationDetails = yield this.qrServices.getInvitationQRCode(this.qrDetails.id);\n        let alert = yield this.alertCtrl.create({\n          header: 'تفاصيل رمز QR',\n          message: 'الرجاء تعديل تفاصيل الدعوة المطلوبة',\n          inputs: [{\n            name: 'EventName',\n            type: 'text',\n            placeholder: 'عنوان الدعوة',\n            value: invitationDetails.EventName\n          }, {\n            name: 'AttendeesAllowed',\n            type: 'number',\n            placeholder: 'العدد المسموح',\n            value: invitationDetails.AttendeesAllowed\n          }],\n          buttons: [{\n            text: 'Cancel إلغاء',\n            role: 'cancel',\n            handler: data => {}\n          }, {\n            text: 'Update تحديث',\n            handler: data => __awaiter(this, void 0, void 0, function* () {\n              if (data) {\n                this.qrDetails = invitationDetails;\n                this.qrDetails.EventName = data.EventName;\n                this.qrDetails.AttendeesAllowed = Number(data.AttendeesAllowed);\n                this.qrvalue = yield this.qrServices.UpdateInvitationQRCodeInDb(this.qrDetails);\n              } else {\n                return false;\n              }\n            })\n          }]\n        });\n        yield alert.present();\n      });\n    }\n\n    CreateCode(data) {\n      return __awaiter(this, void 0, void 0, function* () {\n        let details = yield this.qrServices.InsertInvitationQRCodeInDb(data);\n        this.qrDetails.id = yield this.encryptionService.Decrypt('' + details);\n        return details;\n      });\n    }\n\n    rafAsync() {\n      return __awaiter(this, void 0, void 0, function* () {\n        return new Promise(resolve => {\n          requestAnimationFrame(resolve); //faster than set time out\n        });\n      });\n    }\n\n    checkElement(selector) {\n      return __awaiter(this, void 0, void 0, function* () {\n        let querySelector = null;\n\n        while (querySelector === null) {\n          yield this.rafAsync();\n          querySelector = document.querySelector(\"#qrcode > svg > path:nth-child(2)\");\n        }\n\n        return querySelector;\n      });\n    }\n\n    registerIcon(icon) {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.imageEditor.registerIcons({\n          customQR: '' + icon\n        });\n        this.imageEditor.addIcon('customQR', {\n          fill: 'transparent',\n          stroke: this.iconColor,\n          strokeWidth: 1,\n          left: 300,\n          top: 100,\n          margin: 0\n        });\n        return true;\n      });\n    }\n\n    addQRIcon() {\n      return __awaiter(this, void 0, void 0, function* () {\n        // do work here\n        var icon = document.querySelector(\"#qrcode > svg > path:nth-child(2)\").getAttribute('d');\n        var value = yield this.registerIcon(icon);\n        return value;\n      });\n    }\n\n    showShareOptions() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const modal = yield this.modalCtrl.create({\n          component: SocialSharePage,\n          cssClass: 'backTransparent',\n          backdropDismiss: true,\n          showBackdrop: true,\n          swipeToClose: true,\n          keyboardClose: true,\n          componentProps: {\n            imageToShare: this.imageEditor.toDataURL()\n          }\n        });\n        return modal.present();\n      });\n    }\n\n    confirmMovingBack() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const alert = yield this.alertController.create({\n          header: 'Attention !! تنبيه',\n          message: 'You will lose all your updating if you are leaving without download this image ....في حال لم تقم بتنزيل الصورة فإنك ستفقد كل التغييرات بمجرد مغادرتك الصفحة',\n          buttons: [{\n            text: 'إلغاء',\n            role: 'cancel',\n            cssClass: 'secondary',\n            //side:'start',\n            //icon:'open-outline',\n            handler: () => {}\n          }, {\n            text: 'مـوافق',\n            handler: () => {\n              this._Router.navigate(['/beginning']);\n            }\n          }]\n        });\n        yield alert.present();\n      });\n    }\n\n  }\n\n  ImageEditorPage.ɵfac = function ImageEditorPage_Factory(t) {\n    return new (t || ImageEditorPage)(i0.ɵɵdirectiveInject(i1.Base64ToGallery), i0.ɵɵdirectiveInject(i2.AngularFirestore), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i4.AngularFireAuth), i0.ɵɵdirectiveInject(i5.ModalController), i0.ɵɵdirectiveInject(i6.EncryptionService), i0.ɵɵdirectiveInject(i5.AlertController), i0.ɵɵdirectiveInject(i7.Meta), i0.ɵɵdirectiveInject(i8.InvitationService), i0.ɵɵdirectiveInject(i9.ActivatedRoute), i0.ɵɵdirectiveInject(i10.Storage), i0.ɵɵdirectiveInject(i5.AlertController), i0.ɵɵdirectiveInject(i9.Router), i0.ɵɵdirectiveInject(i5.ToastController));\n  };\n\n  ImageEditorPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ImageEditorPage,\n    selectors: [[\"app-image-editor\"]],\n    decls: 14,\n    vars: 9,\n    consts: [[\"color\", \"amethyst\"], [\"slot\", \"end\"], [\"auto-hide\", \"false\"], [1, \"main-header4\"], [\"slot\", \"start\"], [3, \"click\"], [\"name\", \"arrow-back-outline\", \"slot\", \"start\", \"color\", \"light\"], [\"id\", \"qrcode\", 3, \"ngStyle\", \"margin\", \"value\", \"color\", \"backgroundColor\"], [\"id\", \"tui-image-editor-container\"]],\n    template: function ImageEditorPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\");\n        i0.ɵɵelementStart(1, \"ion-toolbar\", 0);\n        i0.ɵɵelementStart(2, \"ion-buttons\", 1);\n        i0.ɵɵelement(3, \"ion-menu-button\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-title\", 3);\n        i0.ɵɵtext(5);\n        i0.ɵɵpipe(6, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"ion-buttons\", 4);\n        i0.ɵɵelementStart(8, \"ion-button\", 5);\n        i0.ɵɵlistener(\"click\", function ImageEditorPage_Template_ion_button_click_8_listener() {\n          return ctx.confirmMovingBack();\n        });\n        i0.ɵɵelement(9, \"ion-icon\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"ion-content\");\n        i0.ɵɵelement(11, \"qrcode-svg\", 7);\n        i0.ɵɵelementStart(12, \"div\", 8);\n        i0.ɵɵelement(13, \"canvas\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 6, \"edit\"));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction0(8, _c0))(\"margin\", 4)(\"value\", ctx.qrvalue)(\"color\", \"black\")(\"backgroundColor\", \"white\");\n      }\n    },\n    directives: [i5.IonHeader, i5.IonToolbar, i5.IonButtons, i5.IonMenuButton, i5.IonTitle, i5.IonButton, i5.IonIcon, i5.IonContent, i11.QRCodeSVGComponent, i12.NgStyle],\n    pipes: [i13.TranslatePipe],\n    styles: [\"@import\\\"http://fonts.googleapis.com/css?family=Noto+Sans\\\";@import\\\"http://fonts.cdnfonts.com/css/cairo\\\";body[_ngcontent-%COMP%]{height:100%;margin:0}.hidden[_ngcontent-%COMP%]{display:none}.tie-btn-zoomOut[_ngcontent-%COMP%]{display:none}.tie-btn-zoomIn[_ngcontent-%COMP%]{display:none}.tie-btn-hand[_ngcontent-%COMP%]{display:none}\", \".hidden[_ngcontent-%COMP%]{display:none}\"]\n  });\n  return ImageEditorPage;\n})();","map":null,"metadata":{},"sourceType":"module"}