{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore'; // import * as firebase from 'firebase';\n// import { Observable } from 'rxjs';\n\nimport { first, map } from 'rxjs/operators';\nimport { Storage } from '@ionic/storage';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/firestore\";\nimport * as i2 from \"@angular/fire/auth\";\nimport * as i3 from \"@ionic/storage\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(firestore, fireAuth, storage) {\n      this.firestore = firestore;\n      this.fireAuth = fireAuth;\n      this.storage = storage;\n      this.userId = \"\";\n      this.userAuth = false;\n      this.fireAuth.authState.subscribe(user => {\n        if (user) {\n          console.log(\"USERSERVICE.....  auth = true\");\n          this.userId = user.uid;\n          this.userAuth = true;\n          this.storage.set('userId', this.userId);\n          this.storage.set('userAuth', true);\n        } else {\n          console.log(\"USERSERVICE.....  auth = false\"); // Empty the value when user signs out\n\n          this.userId = \"\";\n          this.userAuth = false;\n          this.storage.set('userId', this.userId);\n          this.storage.set('userAuth', true);\n        }\n      });\n    } //**************************************//\n    //******   user authentication    ******//\n    //**************************************//\n    ///https://angularfirebase.com/snippets/check-if-current-user-exists-with-angularfire/\n\n\n    isLoggedIn() {\n      return this.fireAuth.authState.pipe(first()).toPromise();\n    }\n\n    getAuthState() {\n      return __awaiter(this, void 0, void 0, function* () {\n        console.log(\"userService call getAuthState=\" + this.userAuth);\n        return yield this.userAuth;\n      });\n    }\n\n    getUserId() {\n      return this.userId;\n    }\n\n    getConnectedUserId() {\n      this.fireAuth.authState.subscribe(user => {\n        if (user) {\n          this.userId = user.uid;\n          this.userAuth = true;\n          this.storage.set('userId', this.userId);\n          this.storage.set('userAuth', true);\n        } else {\n          // Empty the value when user signs out\n          this.userId = null;\n          this.userAuth = false;\n          this.storage.set('userId', null);\n          this.storage.set('userAuth', false);\n        }\n      });\n      return this.userId;\n    } // async doSomething(): Promise<string>  {\n    //   const user = await this.isLoggedIn()\n    //   if (user) {\n    //     // do something\n    //     this.userId = await user.uid;\n    //     return   this.firestore.doc<any>('userProfile/'+this.userId).valueChanges();\n    //   } else {\n    //     // do something else\n    //   }\n    // }\n    // login\n\n\n    signinUser(newEmail, newPassword) {\n      return this.fireAuth.auth.signInWithEmailAndPassword(newEmail, newPassword);\n    }\n\n    resetPassword(email) {\n      return this.fireAuth.auth.sendPasswordResetEmail(email);\n    }\n\n    signoutUser() {\n      return this.fireAuth.auth.signOut();\n    } // register \n\n\n    signupUser(firstname, lastname, phone, username, password) {\n      return this.fireAuth.auth.createUserWithEmailAndPassword(username, password).then(newUser => {\n        console.log(\"userid=========\" + newUser.user.uid); // firebase.database().ref('/userProfile').child(newUser.uid).set({\n\n        this.firestore.collection('userProfile').doc(newUser.user.uid).set({\n          id: newUser.user.uid,\n          firstname: firstname,\n          lastname: lastname,\n          email: username,\n          image: \"\",\n          phone: phone\n        });\n      });\n    } //*******************************//\n    //******   user profile    ******//\n    //*******************************//\n\n\n    getUserProfile() {\n      //  this.fireAuth.authState.subscribe(user => {\n      //   if (user) {\n      //     //this.userId = user.uid;\n      //     //console.log(\"CALL check user auth________________userService user auth id = \"+ this.userId);\n      //     // set angularfireDoc userfile\n      //    // this.userProfile = this.firestore.doc<any>('userProfile/'+this.userId);\n      //       //######\n      //   }\n      // });\n      console.log(\"userId=\" + this.userId);\n      console.log(\"getUserProfile\");\n      return this.firestore.doc('userProfile/' + this.userId).valueChanges();\n    }\n\n    getUserProfileId() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const user = yield this.isLoggedIn();\n\n        if (user) {\n          // do something\n          this.userId = yield user.uid; //return   this.firestore.doc<any>('userProfile/'+this.userId).valueChanges();\n        } else {\n          // do something else\n          console.log(\"++++++++No userId\" + this.userId);\n        }\n\n        console.log(\"++++++++++getUserProfileId = \" + this.userId);\n        return this.userId;\n      });\n    }\n\n    updateUserProfile(firstname, lastname, phone, email) {\n      return this.firestore.doc('userProfile/' + this.userId).update({\n        firstname: firstname,\n        lastname: lastname,\n        phone: phone,\n        email: email\n      });\n    } //*******************************//\n    //******   user address    ******//\n    //*******************************//\n\n\n    getAddressByUserId() {\n      console.log(\"_____getAddressByUserId=\");\n      return this.firestore.collection('/userAddress', ref => ref.where('userProfileId', '==', this.userId)).snapshotChanges().pipe(map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          console.log(\"####get a group of countries=\" + data);\n          return Object.assign({\n            id\n          }, data);\n        });\n      }));\n    }\n\n    getAddressById(addressId) {\n      console.log(\"_______getAddressById\");\n      return this.firestore.doc('userAddress/' + addressId).valueChanges();\n    }\n\n    addAddress(label, fullname, phone, address) {\n      console.log(\"___addAddress=\");\n      return this.firestore.collection('userAddress').add({\n        userProfileId: this.userId,\n        label: label,\n        fullname: fullname,\n        phone: phone,\n        address: address //createdTime: new Date()\n\n      });\n    }\n\n    editAddress(addressId, title, fullname, phone, address) {\n      console.log(\"addressId=\" + addressId);\n      return this.firestore.doc('userAddress/' + addressId).update({\n        label: title,\n        fullname: fullname,\n        phone: phone,\n        address: address\n      });\n    }\n\n    deleteAddress(addressId) {\n      return this.firestore.doc('userAddress/' + addressId).delete();\n    }\n\n  }\n\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.AngularFirestore), i0.ɵɵinject(i2.AngularFireAuth), i0.ɵɵinject(i3.Storage));\n  };\n\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module"}