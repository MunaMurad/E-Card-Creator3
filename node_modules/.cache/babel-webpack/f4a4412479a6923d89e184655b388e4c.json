{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore'; // import * as firebase from 'firebase';\n// import { Observable } from 'rxjs';\n\nimport { first } from 'rxjs/operators'; //import { map } from 'rxjs/operators';\n\nimport { Storage } from '@ionic/storage';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/firestore\";\nimport * as i2 from \"@angular/fire/auth\";\nimport * as i3 from \"@ionic/storage\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(firestore, fireAuth, storage) {\n      this.firestore = firestore;\n      this.fireAuth = fireAuth;\n      this.storage = storage;\n      this.userId = \"\";\n      this.userAuth = false;\n      this.fireAuth.authState.subscribe(user => {\n        if (user) {\n          console.log(\"USERSERVICE.....  auth = true\");\n          this.userId = user.uid;\n          this.userAuth = true;\n          this.storage.set('userId', this.userId);\n          this.storage.set('userAuth', true);\n        } else {\n          // Empty the value when user signs out\n          this.userId = \"\";\n          this.userAuth = false;\n          this.storage.set('userId', this.userId);\n          this.storage.set('userAuth', this.userAuth);\n        }\n      });\n    } //**************************************//\n    //******   user authentication    ******//\n    //**************************************//\n\n\n    isLoggedIn() {\n      return this.fireAuth.authState.pipe(first()).toPromise();\n    }\n\n    getAuthState() {\n      return __awaiter(this, void 0, void 0, function* () {\n        console.log(\"userService call getAuthState=\" + this.userAuth);\n        return yield this.userAuth;\n      });\n    }\n\n    getUserId() {\n      return this.userId;\n    }\n\n    getConnectedUserId() {\n      this.fireAuth.authState.subscribe(user => {\n        if (user) {\n          this.userId = user.uid;\n          this.userAuth = true;\n          this.storage.set('userId', this.userId);\n          this.storage.set('userAuth', true);\n        } else {\n          // Empty the value when user signs out\n          this.userId = null;\n          this.userAuth = false;\n          this.storage.set('userId', null);\n          this.storage.set('userAuth', false);\n        }\n      });\n      return this.userId;\n    } // login\n\n\n    signinUser(newEmail, newPassword) {\n      return this.fireAuth.auth.signInWithEmailAndPassword(newEmail, newPassword);\n    } //reset Password\n\n\n    resetPassword(email) {\n      return this.fireAuth.auth.sendPasswordResetEmail(email);\n    } //signout\n\n\n    signoutUser() {\n      return this.fireAuth.auth.signOut();\n    } // register \n\n\n    signupUser(firstname, lastname, username, password) {\n      return this.fireAuth.auth.createUserWithEmailAndPassword(username, password).then(newUser => {\n        console.log(\"userid=========\" + newUser.user.uid);\n        this.firestore.collection('userProfile').doc(newUser.user.uid).set({\n          id: newUser.user.uid,\n          firstname: firstname,\n          lastname: lastname,\n          email: username,\n          image: \"\"\n        });\n      });\n    } //*******************************//\n    //******   user profile    ******//\n    //*******************************//\n\n\n    getUserProfile() {\n      console.log(\"userId=\" + this.userId);\n      console.log(\"getUserProfile\");\n      return this.firestore.doc('userProfile/' + this.userId).valueChanges();\n    }\n\n    getUserProfileId() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const user = yield this.isLoggedIn();\n\n        if (user) {\n          this.userId = yield user.uid; //return   this.firestore.doc<any>('userProfile/'+this.userId).valueChanges();\n        } else {\n          console.log(\"++++++++No userId\" + this.userId);\n        }\n\n        console.log(\"++++++++++getUserProfileId = \" + this.userId);\n        return this.userId;\n      });\n    }\n\n    updateUserProfile(firstname, lastname, // phone: string, \n    email) {\n      return this.firestore.doc('userProfile/' + this.userId).update({\n        firstname: firstname,\n        lastname: lastname,\n        //  phone:phone,\n        email: email\n      });\n    }\n\n  }\n\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.AngularFirestore), i0.ɵɵinject(i2.AngularFireAuth), i0.ɵɵinject(i3.Storage));\n  };\n\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module"}