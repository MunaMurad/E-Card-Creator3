{"ast":null,"code":"import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\nimport isPlainObject from './isPlainObject.js';\n/** `Object#toString` result references. */\n\nvar domExcTag = '[object DOMException]',\n    errorTag = '[object Error]';\n/**\r\n * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\r\n * `SyntaxError`, `TypeError`, or `URIError` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\r\n * @example\r\n *\r\n * _.isError(new Error);\r\n * // => true\r\n *\r\n * _.isError(Error);\r\n * // => false\r\n */\n\nfunction isError(value) {\n  if (!isObjectLike(value)) {\n    return false;\n  }\n\n  var tag = baseGetTag(value);\n  return tag == errorTag || tag == domExcTag || typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value);\n}\n\nexport default isError;","map":null,"metadata":{},"sourceType":"module"}