{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { ElementRef } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\nimport { LoadingController } from '@ionic/angular';\nimport jsQR from \"jsqr\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = [\"video\"];\nconst _c1 = [\"canvas\"];\nconst _c2 = [\"fileinput\"];\n\nfunction QRScannerPage_ion_button_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-button\", 9);\n    i0.ɵɵlistener(\"click\", function QRScannerPage_ion_button_17_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.reset();\n    });\n    i0.ɵɵelement(1, \"ion-icon\", 17);\n    i0.ɵɵtext(2, \" Reset \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction QRScannerPage_ion_button_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-button\", 9);\n    i0.ɵɵlistener(\"click\", function QRScannerPage_ion_button_22_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.stopScan();\n    });\n    i0.ɵɵelement(1, \"ion-icon\", 18);\n    i0.ɵɵtext(2, \" Stop scan \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction QRScannerPage_ion_card_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\");\n    i0.ɵɵelementStart(1, \"ion-card-header\");\n    i0.ɵɵelementStart(2, \"ion-card-title\");\n    i0.ɵɵtext(3, \" QR code \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ion-card-content\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.scanResult, \" \");\n  }\n}\n\nexport let QRScannerPage = /*#__PURE__*/(() => {\n  class QRScannerPage {\n    constructor(toastCtrl, loadingCtrl) {\n      this.toastCtrl = toastCtrl;\n      this.loadingCtrl = loadingCtrl;\n      this.scanResult = null;\n      this.scanActive = false;\n    }\n\n    ngAfterViewInit() {\n      this.videoElement = this.video.nativeElement;\n      this.canvasElement = this.canvas.nativeElement;\n      this.canvasContext = this.canvasElement.getContext('2d');\n    }\n\n    captureImage() {\n      this.fileinput.nativeElement.click();\n    }\n\n    handleFile(files) {\n      const file = files.item(0);\n      var img = new Image();\n\n      img.onload = () => {\n        this.canvasContext.drawImage(img, 0, 0, this.canvasElement.width, this.canvasElement.height);\n        const imageData = this.canvasContext.getImageData(0, 0, this.canvasElement.width, this.canvasElement.height);\n        const code = jsQR(imageData.data, imageData.width, imageData.height, {\n          inversionAttempts: 'dontInvert'\n        });\n\n        if (code) {\n          this.scanResult = code.data;\n          this.showQrToast();\n        }\n      };\n\n      img.src = URL.createObjectURL(file);\n    }\n\n    startScan() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const stream = yield navigator.mediaDevices.getUserMedia({\n          video: {\n            facingMode: 'environment'\n          }\n        });\n        this.videoElement.srcObject = stream;\n        this.videoElement.setAttribute('playsinline', true);\n        this.videoElement.play();\n        this.loading = yield this.loadingCtrl.create({});\n        yield this.loading.present();\n        requestAnimationFrame(this.scan.bind(this));\n      });\n    }\n\n    scan() {\n      return __awaiter(this, void 0, void 0, function* () {\n        console.log('SCAN');\n\n        if (this.videoElement.readyState === this.videoElement.HAVE_ENOUGH_DATA) {\n          if (this.loading) {\n            yield this.loading.dismiss();\n            this.loading = null;\n            this.scanActive = true;\n          }\n\n          this.canvasElement.height = this.videoElement.videoHeight;\n          this.canvasElement.width = this.videoElement.videoWidth;\n          this.canvasContext.drawImage(this.videoElement, 0, 0, this.canvasElement.width, this.canvasElement.height);\n          const imageData = this.canvasContext.getImageData(0, 0, this.canvasElement, this.canvasElement.height);\n          const code = jsQR(imageData.data, imageData.width, imageData.height, {\n            inversionAttempts: 'dontInvert'\n          });\n          console.log('code: ', code);\n\n          if (code) {\n            this.scanActive = false;\n            this.scanResult = code.data;\n            this.showQrToast();\n          } else {\n            if (this.scanActive) {\n              requestAnimationFrame(this.scan.bind(this));\n            }\n          }\n        } else {\n          requestAnimationFrame(this.scan.bind(this));\n        }\n      });\n    }\n\n    reset() {\n      this.scanResult = null;\n    }\n\n    stopScan() {\n      this.scanActive = false;\n    }\n\n    showQrToast() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const toast = yield this.toastCtrl.create({\n          message: 'Open $(this.scanResult)?',\n          position: 'top',\n          buttons: [{\n            text: 'Open',\n            handler: () => {\n              window.open(this.scanResult, '_system', 'location=yes');\n            }\n          }]\n        });\n        toast.present();\n      });\n    }\n\n    ngOnInit() {}\n\n  }\n\n  QRScannerPage.ɵfac = function QRScannerPage_Factory(t) {\n    return new (t || QRScannerPage)(i0.ɵɵdirectiveInject(i1.ToastController), i0.ɵɵdirectiveInject(i1.LoadingController));\n  };\n\n  QRScannerPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: QRScannerPage,\n    selectors: [[\"app-qr-scanner\"]],\n    viewQuery: function QRScannerPage_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.video = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvas = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileinput = _t.first);\n      }\n    },\n    decls: 24,\n    vars: 4,\n    consts: [[\"color\", \"amethyst\"], [\"slot\", \"start\"], [\"auto-hide\", \"false\"], [\"color\", \"light\", \"text\", \" \"], [1, \"backg\"], [\"type\", \"file\", \"accept\", \"image/*:capture=camera\", \"hidden\", \"\", 3, \"change\"], [\"fileinput\", \"\"], [\"expand\", \"full\", 3, \"click\"], [\"slot\", \"start\", \"name\", \"camera\"], [\"expand\", \"full\", \"color\", \"amethyst\", 3, \"click\"], [\"slot\", \"start\", \"name\", \"qr-scanner\"], [\"expand\", \"full\", \"color\", \"amethyst\", 3, \"click\", 4, \"ngIf\"], [\"width\", \"100%\", 3, \"hidden\"], [\"video\", \"\"], [\"hidden\", \"\"], [\"canvas\", \"\"], [4, \"ngIf\"], [\"slot\", \"start\", \"name\", \"refresh\"], [\"slot\", \"start\", \"name\", \"close\"]],\n    template: function QRScannerPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\");\n        i0.ɵɵelementStart(1, \"ion-toolbar\", 0);\n        i0.ɵɵelementStart(2, \"ion-buttons\", 1);\n        i0.ɵɵelement(3, \"ion-menu-button\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-title\");\n        i0.ɵɵtext(5, \"QR-scanner\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"ion-buttons\", 1);\n        i0.ɵɵelement(7, \"ion-back-button\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"ion-content\", 4);\n        i0.ɵɵelementStart(9, \"input\", 5, 6);\n        i0.ɵɵlistener(\"change\", function QRScannerPage_Template_input_change_9_listener($event) {\n          return ctx.handleFile($event.target.files);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"ion-button\", 7);\n        i0.ɵɵlistener(\"click\", function QRScannerPage_Template_ion_button_click_11_listener() {\n          return ctx.captureImage();\n        });\n        i0.ɵɵelement(12, \"ion-icon\", 8);\n        i0.ɵɵtext(13, \" Capture Image\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"ion-button\", 9);\n        i0.ɵɵlistener(\"click\", function QRScannerPage_Template_ion_button_click_14_listener() {\n          return ctx.startScan();\n        });\n        i0.ɵɵelement(15, \"ion-icon\", 10);\n        i0.ɵɵtext(16, \" Start Scan \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, QRScannerPage_ion_button_17_Template, 3, 0, \"ion-button\", 11);\n        i0.ɵɵelement(18, \"video\", 12, 13);\n        i0.ɵɵelement(20, \"canvas\", 14, 15);\n        i0.ɵɵtemplate(22, QRScannerPage_ion_button_22_Template, 3, 0, \"ion-button\", 11);\n        i0.ɵɵtemplate(23, QRScannerPage_ion_card_23_Template, 6, 1, \"ion-card\", 16);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngIf\", ctx.scanResult);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"hidden\", !ctx.scanActive);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.scanActive);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.scanResult);\n      }\n    },\n    directives: [i1.IonHeader, i1.IonToolbar, i1.IonButtons, i1.IonMenuButton, i1.IonTitle, i1.IonBackButton, i1.IonBackButtonDelegate, i1.IonContent, i1.IonButton, i1.IonIcon, i2.NgIf, i1.IonCard, i1.IonCardHeader, i1.IonCardTitle, i1.IonCardContent],\n    styles: [\".backg[_ngcontent-%COMP%]{--background:none;background-position:center center;background-size:cover;background-repeat:no-repeat;background-image:url(henry-co--odUkx8C2gg-unsplash.jpg)}\"]\n  });\n  return QRScannerPage;\n})();","map":null,"metadata":{},"sourceType":"module"}