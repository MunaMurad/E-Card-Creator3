{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { Component, Input, Output, EventEmitter, forwardRef } from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nvar RatingComponent = function () {\n  function RatingComponent() {\n    this.size = 'default';\n    this.rateChange = new EventEmitter();\n  }\n\n  RatingComponent_1 = RatingComponent;\n\n  RatingComponent.prototype.onClick = function (rate) {\n    this.rate = rate;\n    this.rateChange.emit(this.rate);\n\n    this._onChange(this.rate);\n  };\n\n  RatingComponent.prototype.writeValue = function (value) {\n    if (value !== undefined) {\n      this.rate = value;\n    }\n  };\n\n  RatingComponent.prototype.registerOnChange = function (fn) {\n    this._onChange = fn;\n  };\n\n  RatingComponent.prototype.registerOnTouched = function (fn) {};\n\n  RatingComponent.prototype.setDisabledState = function (isDisabled) {\n    this.readonly = isDisabled;\n  };\n\n  var RatingComponent_1;\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], RatingComponent.prototype, \"rate\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], RatingComponent.prototype, \"readonly\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], RatingComponent.prototype, \"size\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], RatingComponent.prototype, \"rateChange\", void 0);\n\n  RatingComponent = RatingComponent_1 = __decorate([Component({\n    selector: \"rating\",\n    template: \"\\n    <ion-buttons>\\n      <ion-button [disabled]=\\\"readonly\\\" fill=\\\"clear\\\" [size]=\\\"size\\\" *ngFor=\\\"let current of [1, 2, 3, 4, 5]; let i = index\\\"\\n        (click)=\\\"onClick(i + 1)\\\" (mouseover)=\\\"hoverRate = i + 1\\\" (mouseleave)=\\\"hoverRate = 0\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"star\\\" [class.filled]=\\\"(i + 1 <= hoverRate || (!hoverRate && i + 1 <= rate))\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  \",\n    styles: [\"\\n      ion-buttons {\\n        display: flex;\\n        justify-content: center;\\n      }\\n\\n      [ion-button][disabled] {\\n        opacity: 1;\\n      }\\n\\n      ion-icon {\\n        color: gray;\\n      }\\n\\n      ion-icon.filled {\\n        color: orange;\\n      }\\n    \"],\n    providers: [{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(function () {\n        return RatingComponent_1;\n      }),\n      multi: true\n    }]\n  })], RatingComponent);\n  return RatingComponent;\n}();\n\nexport { RatingComponent }; //# sourceMappingURL=rating.js.map","map":null,"metadata":{},"sourceType":"module"}