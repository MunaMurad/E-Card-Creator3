{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { InvitationService } from './../../services/InvitationService';\nimport { ElementRef } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\nimport { LoadingController } from '@ionic/angular';\nimport jsQR from \"jsqr\";\nimport { EncryptionService } from './../../services/encryption.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"./../../services/encryption.service\";\nimport * as i3 from \"./../../services/InvitationService\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@ngx-translate/core\";\nconst _c0 = [\"video\"];\nconst _c1 = [\"canvas\"];\nconst _c2 = [\"fileinput\"];\n\nfunction QRScannerPage_ion_button_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-button\", 9);\n    i0.ɵɵlistener(\"click\", function QRScannerPage_ion_button_22_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.reset();\n    });\n    i0.ɵɵelement(1, \"ion-icon\", 20);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 1, \"Reset\"), \" \");\n  }\n}\n\nfunction QRScannerPage_ion_button_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-button\", 21);\n    i0.ɵɵlistener(\"click\", function QRScannerPage_ion_button_27_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.stopScan();\n    });\n    i0.ɵɵelement(1, \"ion-icon\", 22);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 1, \"StopScan\"), \" \");\n  }\n}\n\nfunction QRScannerPage_ion_card_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\");\n    i0.ɵɵelementStart(1, \"ion-card-header\", 23);\n    i0.ɵɵelementStart(2, \"ion-card-title\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"ion-card-content\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 2, \"QRcode\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.scanResult, \" \");\n  }\n}\n\nexport let QRScannerPage = /*#__PURE__*/(() => {\n  class QRScannerPage {\n    //private encryptionService: EncryptionService\n    constructor(toastCtrl, loadingCtrl, encryptionService, invitationService) {\n      this.toastCtrl = toastCtrl;\n      this.loadingCtrl = loadingCtrl;\n      this.encryptionService = encryptionService;\n      this.invitationService = invitationService;\n      this.scanResult = null;\n      this.scanActive = false;\n      this.CurrentCount = null;\n    }\n\n    ngAfterViewInit() {\n      this.videoElement = this.video.nativeElement;\n      this.canvasElement = this.canvas.nativeElement;\n      this.canvasContext = this.canvasElement.getContext('2d');\n    }\n\n    captureImage() {\n      this.fileinput.nativeElement.click();\n    }\n\n    handleFile(event) {\n      const target = event.target;\n      const file = target.files[0]; //const file=files.item(0);\n\n      var img = new Image();\n\n      img.onload = () => __awaiter(this, void 0, void 0, function* () {\n        this.canvasContext.drawImage(img, 0, 0, this.canvasElement.width, this.canvasElement.height);\n        const imageData = this.canvasContext.getImageData(0, 0, this.canvasElement.width, this.canvasElement.height);\n        const code = jsQR(imageData.data, imageData.width, imageData.height, {\n          inversionAttempts: 'dontInvert'\n        });\n\n        if (code) {\n          this.qrData = code.data;\n          console.log('started 1');\n          yield this.CountScanner(); // this.showQrToast();\n        }\n      });\n\n      img.src = URL.createObjectURL(file);\n    }\n\n    startScan() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const stream = yield navigator.mediaDevices.getUserMedia({\n          video: {\n            facingMode: 'environment'\n          }\n        });\n        this.videoElement.srcObject = stream;\n        this.videoElement.setAttribute('playsinline', true);\n        this.videoElement.play();\n        this.loading = yield this.loadingCtrl.create({});\n        yield this.loading.present();\n        requestAnimationFrame(this.scan.bind(this));\n      });\n    }\n\n    scan() {\n      return __awaiter(this, void 0, void 0, function* () {\n        console.log('SCAN');\n\n        if (this.videoElement.readyState === this.videoElement.HAVE_ENOUGH_DATA) {\n          if (this.loading) {\n            yield this.loading.dismiss();\n            this.loading = null;\n            this.scanActive = true;\n          }\n\n          this.canvasElement.height = this.videoElement.videoHeight;\n          this.canvasElement.width = this.videoElement.videoWidth;\n          this.canvasContext.drawImage(this.videoElement, 0, 0, this.canvasElement.width, this.canvasElement.height);\n          const imageData = this.canvasContext.getImageData(0, 0, this.canvasElement.width, this.canvasElement.height);\n          const code = jsQR(imageData.data, imageData.width, imageData.height, {\n            inversionAttempts: 'dontInvert'\n          });\n\n          if (code) {\n            this.scanActive = false;\n            this.qrData = code.data;\n            yield this.CountScanner(); //  this.showQrToast();\n          } else {\n            if (this.scanActive) {\n              requestAnimationFrame(this.scan.bind(this));\n            }\n          }\n        } else {\n          requestAnimationFrame(this.scan.bind(this));\n        }\n      });\n    }\n\n    reset() {\n      this.scanResult = null;\n    }\n\n    stopScan() {\n      this.scanActive = false;\n    } // async showQrToast(){\n    //   const toast=await this.toastCtrl.create({\n    //     //message:'Open the QR code',\n    //     position:'top',\n    //     buttons:[\n    //       {\n    //         side: 'start',\n    //         icon:'open-outline',\n    //         text:'Open the QR code and count',\n    //         handler:()=>{\n    //           window.open(this.scanResult,'_system','location=yes'),\n    //           this.CountScanner();\n    //         }\n    //       }\n    //     ]\n    //   });\n    //   toast.present();\n    // }\n    //tryin to make counter code:\n\n\n    CountScanner() {\n      return __awaiter(this, void 0, void 0, function* () {\n        try {\n          console.log(this.qrData);\n          var details;\n          var decryptedText;\n          yield this.encryptionService.Decrypt('' + this.qrData).then(result => {\n            decryptedText = result;\n            details = this.invitationService.getInvitationQRCode(result);\n          });\n          console.log('Decrypted QRCode  = ', decryptedText);\n          console.log('Details of QRCode  = ', details);\n\n          if (details == null) {\n            this.presentToast(\"Event Not Found. Please make sure you're scanning the correct code\", 'danger');\n          } else if (details.AttendeesCount < details.AttendeesAllowed) {\n            this.invitationService.IncrementAttendeesCount(this.decryptedText).then(result => {\n              this.presentToast(\"Updated Attendees\", 'success');\n            });\n          } else {\n            this.presentToast(\"Sorry you have reached the maximum capacity of attendees\", 'danger');\n          }\n        } catch (error) {\n          console.log(error);\n          this.presentToast(\"Error Occured. Please check your internet connection.\", \"danger\");\n        }\n      });\n    }\n\n    presentToast(message, type) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const toast = yield this.toastCtrl.create({\n          message: message,\n          duration: 3000,\n          color: type\n        });\n        toast.present();\n      });\n    }\n\n    ngOnInit() {}\n\n  }\n\n  QRScannerPage.ɵfac = function QRScannerPage_Factory(t) {\n    return new (t || QRScannerPage)(i0.ɵɵdirectiveInject(i1.ToastController), i0.ɵɵdirectiveInject(i1.LoadingController), i0.ɵɵdirectiveInject(i2.EncryptionService), i0.ɵɵdirectiveInject(i3.InvitationService));\n  };\n\n  QRScannerPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: QRScannerPage,\n    selectors: [[\"app-qr-scanner\"]],\n    viewQuery: function QRScannerPage_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.video = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvas = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileinput = _t.first);\n      }\n    },\n    decls: 36,\n    vars: 19,\n    consts: [[\"color\", \"amethyst\"], [\"slot\", \"start\"], [\"auto-hide\", \"false\"], [1, \"backg\"], [\"type\", \"file\", \"accept\", \"image/*;capture=camera\", \"hidden\", \"\", 3, \"change\"], [\"fileinput\", \"\"], [\"expand\", \"full\", \"fill\", \"solid\", \"color\", \"pomegrenade\", 3, \"click\"], [\"slot\", \"start\", \"name\", \"images\"], [1, \"ion-text-center\"], [\"expand\", \"full\", \"color\", \"amethyst\", 3, \"click\"], [\"slot\", \"start\", \"name\", \"scan-outline\"], [\"expand\", \"full\", \"color\", \"amethyst\", 3, \"click\", 4, \"ngIf\"], [\"width\", \"100%\", 3, \"hidden\"], [\"video\", \"\"], [\"hidden\", \"\"], [\"canvas\", \"\"], [\"expand\", \"full\", \"color\", \"pomegrenade\", 3, \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"sign-in-hr\"], [\"horizontal\", \"end\", \"vertical\", \"center\"], [\"slot\", \"start\", \"name\", \"refresh\"], [\"expand\", \"full\", \"color\", \"pomegrenade\", 3, \"click\"], [\"slot\", \"start\", \"name\", \"close\"], [\"color\", \"pomegrenade\"]],\n    template: function QRScannerPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\");\n        i0.ɵɵelementStart(1, \"ion-toolbar\", 0);\n        i0.ɵɵelementStart(2, \"ion-buttons\", 1);\n        i0.ɵɵelement(3, \"ion-menu-button\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-title\");\n        i0.ɵɵtext(5);\n        i0.ɵɵpipe(6, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"ion-content\", 3);\n        i0.ɵɵelementStart(8, \"input\", 4, 5);\n        i0.ɵɵlistener(\"change\", function QRScannerPage_Template_input_change_8_listener($event) {\n          return ctx.handleFile($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"ion-button\", 6);\n        i0.ɵɵlistener(\"click\", function QRScannerPage_Template_ion_button_click_10_listener() {\n          return ctx.captureImage();\n        });\n        i0.ɵɵelement(11, \"ion-icon\", 7);\n        i0.ɵɵtext(12);\n        i0.ɵɵpipe(13, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 8);\n        i0.ɵɵelementStart(15, \"h3\");\n        i0.ɵɵtext(16);\n        i0.ɵɵpipe(17, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"ion-button\", 9);\n        i0.ɵɵlistener(\"click\", function QRScannerPage_Template_ion_button_click_18_listener() {\n          return ctx.startScan();\n        });\n        i0.ɵɵelement(19, \"ion-icon\", 10);\n        i0.ɵɵtext(20);\n        i0.ɵɵpipe(21, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(22, QRScannerPage_ion_button_22_Template, 4, 3, \"ion-button\", 11);\n        i0.ɵɵelement(23, \"video\", 12, 13);\n        i0.ɵɵelement(25, \"canvas\", 14, 15);\n        i0.ɵɵtemplate(27, QRScannerPage_ion_button_27_Template, 4, 3, \"ion-button\", 16);\n        i0.ɵɵtemplate(28, QRScannerPage_ion_card_28_Template, 7, 4, \"ion-card\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"ion-footer\");\n        i0.ɵɵelementStart(30, \"div\", 18);\n        i0.ɵɵelementStart(31, \"p\");\n        i0.ɵɵelementStart(32, \"span\");\n        i0.ɵɵelementStart(33, \"ion-text\", 19);\n        i0.ɵɵtext(34);\n        i0.ɵɵpipe(35, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 9, \"QR-scanner\"));\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(13, 11, \"viewQR\"), \"\\n\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"_______________ \", i0.ɵɵpipeBind1(17, 13, \"OR\"), \" _________________\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(21, 15, \"StartScan\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.scanResult);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"hidden\", !ctx.scanActive);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.scanActive);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.scanResult);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(35, 17, \"TEAM\"), \" \");\n      }\n    },\n    directives: [i1.IonHeader, i1.IonToolbar, i1.IonButtons, i1.IonMenuButton, i1.IonTitle, i1.IonContent, i1.IonButton, i1.IonIcon, i4.NgIf, i1.IonFooter, i1.IonText, i1.IonCard, i1.IonCardHeader, i1.IonCardTitle, i1.IonCardContent],\n    pipes: [i5.TranslatePipe],\n    styles: [\".backg[_ngcontent-%COMP%]{--background:none;background-position:center center;background-size:cover;background-repeat:no-repeat;background-image:url(henry-co--odUkx8C2gg-unsplash.jpg)}.sign-in-hr[_ngcontent-%COMP%]{width:100%;height:0%;border-bottom:0px solid #b1a7a7;text-align:center;margin-top:10px;margin-bottom:10px;vertical-align:bottom}.sign-in-hr[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:18px;color:#535151c7;background-color:#ffffff42;padding:0 10px}h3[_ngcontent-%COMP%]{color:#857e7ee3!important;font-weight:300!important;font-size:12px!important}\"]\n  });\n  return QRScannerPage;\n})();","map":null,"metadata":{},"sourceType":"module"}