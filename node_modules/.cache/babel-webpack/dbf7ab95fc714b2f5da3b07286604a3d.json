{"ast":null,"code":"import baseSlice from './_baseSlice.js';\n/**\r\n * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\r\n * without support for iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array} array The array to query.\r\n * @param {Function} predicate The function invoked per iteration.\r\n * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\r\n * @param {boolean} [fromRight] Specify iterating from right to left.\r\n * @returns {Array} Returns the slice of `array`.\r\n */\n\nfunction baseWhile(array, predicate, isDrop, fromRight) {\n  var length = array.length,\n      index = fromRight ? length : -1;\n\n  while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n\n  return isDrop ? baseSlice(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : baseSlice(array, fromRight ? index + 1 : 0, fromRight ? length : index);\n}\n\nexport default baseWhile;","map":null,"metadata":{},"sourceType":"module"}