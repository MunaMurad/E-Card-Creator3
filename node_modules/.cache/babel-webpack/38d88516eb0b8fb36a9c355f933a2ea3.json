{"ast":null,"code":"import { MenuController, ModalController, LoadingController } from '@ionic/angular';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/firestore\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"ng2-charts\";\n\nfunction ChartPage_div_16_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"ion-row\");\n    i0.ɵɵelementStart(2, \"ion-col\", 12);\n    i0.ɵɵelementStart(3, \"ion-card\");\n    i0.ɵɵelementStart(4, \"ion-card-header\");\n    i0.ɵɵtext(5, \" Bar chart \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"ion-card-content\");\n    i0.ɵɵelement(7, \"canvas\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"ion-col\", 12);\n    i0.ɵɵelementStart(9, \"ion-card\");\n    i0.ɵɵelementStart(10, \"ion-card-header\");\n    i0.ɵɵtext(11, \" Bar chart(horizontal) \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"ion-card-content\");\n    i0.ɵɵelement(13, \"canvas\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"datasets\", ctx_r1.chartData2)(\"labels\", ctx_r1.chartLabels2)(\"colors\", ctx_r1.chartColor7)(\"options\", ctx_r1.verBarChartOptions);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"datasets\", ctx_r1.chartData)(\"labels\", ctx_r1.chartLabels)(\"colors\", ctx_r1.chartColor1)(\"options\", ctx_r1.horBarChartOptions);\n  }\n}\n\nfunction ChartPage_div_16_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"ion-row\");\n    i0.ɵɵelementStart(2, \"ion-col\", 12);\n    i0.ɵɵelementStart(3, \"ion-card\");\n    i0.ɵɵelementStart(4, \"ion-card-header\");\n    i0.ɵɵtext(5, \" Pie chart \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"ion-card-content\");\n    i0.ɵɵelement(7, \"canvas\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"ion-col\", 12);\n    i0.ɵɵelementStart(9, \"ion-card\");\n    i0.ɵɵelementStart(10, \"ion-card-header\");\n    i0.ɵɵtext(11, \" Doughnut chart \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"ion-card-content\");\n    i0.ɵɵelement(13, \"canvas\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"ion-row\");\n    i0.ɵɵelementStart(15, \"ion-col\", 17);\n    i0.ɵɵelementStart(16, \"ion-card\");\n    i0.ɵɵelementStart(17, \"ion-card-header\");\n    i0.ɵɵtext(18, \" Half Doughnut chart \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"ion-card-content\");\n    i0.ɵɵelement(20, \"canvas\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"datasets\", ctx_r2.chartData)(\"labels\", ctx_r2.chartLabels)(\"colors\", ctx_r2.chartColor1)(\"options\", ctx_r2.pieChartOptions);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"datasets\", ctx_r2.chartData)(\"labels\", ctx_r2.chartLabels)(\"colors\", ctx_r2.chartColor1)(\"options\", ctx_r2.pieChartOptions);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"datasets\", ctx_r2.chartData)(\"labels\", ctx_r2.chartLabels)(\"colors\", ctx_r2.chartColor1)(\"options\", ctx_r2.halfDonutChartOptions);\n  }\n}\n\nfunction ChartPage_div_16_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"ion-card\");\n    i0.ɵɵelementStart(2, \"ion-card-header\");\n    i0.ɵɵtext(3, \" Line chart \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ion-card-content\");\n    i0.ɵɵelement(5, \"canvas\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"datasets\", ctx_r3.chartData2)(\"labels\", ctx_r3.chartLabels2)(\"colors\", ctx_r3.chartColor6)(\"options\", ctx_r3.lineChartOptions);\n  }\n}\n\nfunction ChartPage_div_16_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\n\nfunction ChartPage_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ChartPage_div_16_div_1_Template, 14, 8, \"div\", 11);\n    i0.ɵɵtemplate(2, ChartPage_div_16_div_2_Template, 21, 12, \"div\", 11);\n    i0.ɵɵtemplate(3, ChartPage_div_16_div_3_Template, 6, 4, \"div\", 11);\n    i0.ɵɵtemplate(4, ChartPage_div_16_div_4_Template, 1, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.chartView === \"Bar\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.chartView === \"Pie\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.chartView === \"Line\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.chartView === \"More\");\n  }\n}\n\nexport let ChartPage = /*#__PURE__*/(() => {\n  class ChartPage {\n    //*********** Bar chart **************//\n    // barChartOptions: ChartOptions = {\n    //   responsive: true,\n    //   scales: { xAxes: [{}], yAxes: [{}] },\n    // };\n    // barChartLabels: Label[] = ['2013', '2014', '2015', '2016', '2017', '2018'];\n    // barChartType: ChartType = 'bar';\n    // barChartLegend = true;\n    // barChartPlugins = [];\n    // chartData: ChartDataSets[] = [\n    //   { data: [2500, 5900, 6000, 8100, 8600, 8050, 1200], label: 'Company A' },\n    //   { data: [2800, 4800, 4000, 7900, 9600, 8870, 1400], label: 'Company B' }\n    // ];\n    constructor(firestore, menuCtrl, loadingController, modalController, loadingPopup) {\n      this.firestore = firestore;\n      this.menuCtrl = menuCtrl;\n      this.loadingController = loadingController;\n      this.modalController = modalController;\n      this.loadingPopup = loadingPopup;\n      this.chartArray = [];\n      this.isDataAvailable = false;\n      this.chartView = \"Bar\"; //******************************************//\n\n      this.chartData = [{\n        data: [],\n        label: 'Total visitors'\n      }]; //chartData2: ChartDataSets[] = [{ data: [], label: 'Stock price' }];\n\n      this.chartData2 = [{\n        data: [2500, 5900, 6000, 8100],\n        label: 'Company A'\n      }, {\n        data: [2800, 4800, 4000, 7900],\n        label: 'Company B'\n      }];\n      this.chartLabels2 = ['2013', '2014', '2015', '2016'];\n      this.showLegend = true; //*********** Chart option  **************//\n\n      this.verBarChartOptions = {\n        responsive: true,\n        maintainAspectRatio: false,\n        legend: {\n          position: 'bottom'\n        },\n        segmentShowStroke: false,\n        //maintainAspectRatio: false,\n        title: {\n          display: true,\n          text: 'Total visitors'\n        }\n      };\n      this.horBarChartOptions = {\n        responsive: true,\n        maintainAspectRatio: false,\n        legend: {\n          position: 'bottom'\n        },\n        segmentShowStroke: false,\n        //maintainAspectRatio: false,\n        title: {\n          display: true,\n          text: 'Total visitors'\n        }\n      };\n      this.pieChartOptions = {\n        responsive: true,\n        maintainAspectRatio: false,\n        legend: {\n          position: 'bottom'\n        },\n        segmentShowStroke: false,\n        //maintainAspectRatio: false,\n        title: {\n          display: true,\n          text: 'Total visitors'\n        }\n      };\n      this.lineChartOptions = {\n        responsive: true,\n        legend: {\n          position: 'bottom'\n        },\n        maintainAspectRatio: false,\n        scaleShowVerticalLines: false,\n        segmentShowStroke: false,\n        //maintainAspectRatio: false,\n        title: {\n          display: true,\n          text: 'Total visitors'\n        }\n      };\n      this.halfDonutChartOptions = {\n        responsive: true,\n        legend: {\n          position: 'bottom'\n        },\n        maintainAspectRatio: false,\n        rotation: 1 * Math.PI,\n        circumference: 1 * Math.PI\n      }; //*********** chart color theme   **************//\n\n      this.chartColor1 = [{\n        borderWidth: 1,\n        borderColor: 'white',\n        backgroundColor: ['#d53e4f', '#f46d43', '#fdae61', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2']\n      }];\n      this.chartColor2 = [{\n        backgroundColor: ['rgba(127,0,0, 0.2)', 'rgba(215,48,39,0.2)', 'rgba(244,109,67,0.2)', 'rgba(253,174,97,0.2)', 'rgba(254,224,139,0.2)', 'rgba(255,255,191,0.2)', 'rgba(217,239,139,0.2)', 'rgba(166,217,106,0.2)', 'rgba(102,189,99,0.2)', 'rgba(26,152,80,0.2)', 'rgba(0,104,55,0.2)']\n      }];\n      this.chartColor3 = [{\n        backgroundColor: ['rgba(127,0,0, 0.8)', 'rgba(179,0,0, 0.7)', 'rgba(215,48,31, 0.4)', 'rgba(239,101,72, 0.4)', 'rgba(252,141,89, 0.4)', 'rgba(253,187,132, 0.4)']\n      }];\n      this.chartColor4 = [{\n        backgroundColor: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a', '#01665e', '#003c30']\n      }];\n      this.chartColor5 = [{\n        backgroundColor: ['#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30']\n      }]; // for line chart //\n\n      this.chartColor6 = [{\n        borderWidth: 1,\n        backgroundColor: 'rgba(102, 194, 165, 0.76)'\n      }, {\n        borderWidth: 1,\n        backgroundColor: 'rgba(127,0,0, 0.8)'\n      }]; // for vertical bar chart\n\n      this.chartColor7 = [{\n        borderWidth: 1,\n        backgroundColor: '#d53e4f'\n      }, {\n        borderWidth: 1,\n        backgroundColor: '#66c2a5'\n      }];\n    }\n\n    ngOnInit() {\n      this.chart = this.firestore.collection('layout_chart').valueChanges();\n      this.chart.subscribe(res => {\n        this.chartArray = res;\n        console.log(\"chartArray=\" + JSON.stringify(this.chartArray));\n        setTimeout(() => {// loadingPopup.dismiss();\n        }, 1000);\n        this.chartLabels = [];\n        this.chartData[0].data = [];\n\n        for (let entry of this.chartArray) {\n          this.chartLabels.push(entry.country);\n          this.chartData[0].data.push(entry.view); //this.chartData[1].data.push(entry.view);\n        }\n\n        this.isDataAvailable = true;\n      });\n    }\n\n  }\n\n  ChartPage.ɵfac = function ChartPage_Factory(t) {\n    return new (t || ChartPage)(i0.ɵɵdirectiveInject(i1.AngularFirestore), i0.ɵɵdirectiveInject(i2.MenuController), i0.ɵɵdirectiveInject(i2.LoadingController), i0.ɵɵdirectiveInject(i2.ModalController), i0.ɵɵdirectiveInject(i2.LoadingController));\n  };\n\n  ChartPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChartPage,\n    selectors: [[\"app-chart\"]],\n    decls: 17,\n    vars: 2,\n    consts: [[\"color\", \"instagram\"], [\"slot\", \"start\"], [\"auto-hide\", \"false\"], [1, \"main-header4\"], [\"mode\", \"md\", \"color\", \"instagram\"], [3, \"ngModel\", \"ngModelChange\"], [\"color\", \"light\", \"value\", \"Bar\"], [\"color\", \"light\", \"value\", \"Pie\"], [\"color\", \"light\", \"value\", \"Line\"], [\"mode\", \"ios\"], [\"fixed\", \"\", 1, \"ion-no-padding\"], [4, \"ngIf\"], [\"size-lg\", \"6\", \"size-md\", \"12\", \"size-sm\", \"12\", \"size\", \"12\"], [\"baseChart\", \"\", \"chartType\", \"bar\", 3, \"datasets\", \"labels\", \"colors\", \"options\"], [\"baseChart\", \"\", \"chartType\", \"horizontalBar\", 3, \"datasets\", \"labels\", \"colors\", \"options\"], [\"baseChart\", \"\", \"width\", \"200\", \"height\", \"200\", \"chartType\", \"pie\", 3, \"datasets\", \"labels\", \"colors\", \"options\"], [\"baseChart\", \"\", \"width\", \"200\", \"height\", \"600\", \"chartType\", \"doughnut\", 3, \"datasets\", \"labels\", \"colors\", \"options\"], [\"size\", \"12\"], [\"baseChart\", \"\", \"chartType\", \"line\", 3, \"datasets\", \"labels\", \"colors\", \"options\"]],\n    template: function ChartPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\");\n        i0.ɵɵelementStart(1, \"ion-toolbar\", 0);\n        i0.ɵɵelementStart(2, \"ion-buttons\", 1);\n        i0.ɵɵelement(3, \"ion-menu-button\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-title\", 3);\n        i0.ɵɵtext(5, \"CHART\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"ion-toolbar\", 4);\n        i0.ɵɵelementStart(7, \"ion-segment\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function ChartPage_Template_ion_segment_ngModelChange_7_listener($event) {\n          return ctx.chartView = $event;\n        });\n        i0.ɵɵelementStart(8, \"ion-segment-button\", 6);\n        i0.ɵɵtext(9, \"Bar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"ion-segment-button\", 7);\n        i0.ɵɵtext(11, \"Pie\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"ion-segment-button\", 8);\n        i0.ɵɵtext(13, \"Line\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"ion-content\", 9);\n        i0.ɵɵelementStart(15, \"ion-grid\", 10);\n        i0.ɵɵtemplate(16, ChartPage_div_16_Template, 5, 4, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.chartView);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.isDataAvailable);\n      }\n    },\n    directives: [i2.IonHeader, i2.IonToolbar, i2.IonButtons, i2.IonMenuButton, i2.IonTitle, i2.IonSegment, i2.SelectValueAccessor, i3.NgControlStatus, i3.NgModel, i2.IonSegmentButton, i2.IonContent, i2.IonGrid, i4.NgIf, i2.IonRow, i2.IonCol, i2.IonCard, i2.IonCardHeader, i2.IonCardContent, i5.BaseChartDirective],\n    styles: [\".chart[_ngcontent-%COMP%]{position:relative;min-height:unset}ion-card-content[_ngcontent-%COMP%]{height:100%;min-height:400px}\"]\n  });\n  return ChartPage;\n})();","map":null,"metadata":{},"sourceType":"module"}