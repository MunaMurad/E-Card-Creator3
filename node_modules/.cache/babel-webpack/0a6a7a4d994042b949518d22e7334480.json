{"ast":null,"code":"import baseClone from './_baseClone.js';\nimport baseConforms from './_baseConforms.js';\n/** Used to compose bitmasks for cloning. */\n\nvar CLONE_DEEP_FLAG = 1;\n/**\r\n * Creates a function that invokes the predicate properties of `source` with\r\n * the corresponding property values of a given object, returning `true` if\r\n * all predicates return truthy, else `false`.\r\n *\r\n * **Note:** The created function is equivalent to `_.conformsTo` with\r\n * `source` partially applied.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Util\r\n * @param {Object} source The object of property predicates to conform to.\r\n * @returns {Function} Returns the new spec function.\r\n * @example\r\n *\r\n * var objects = [\r\n *   { 'a': 2, 'b': 1 },\r\n *   { 'a': 1, 'b': 2 }\r\n * ];\r\n *\r\n * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\r\n * // => [{ 'a': 1, 'b': 2 }]\r\n */\n\nfunction conforms(source) {\n  return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n}\n\nexport default conforms;","map":null,"metadata":{},"sourceType":"module"}