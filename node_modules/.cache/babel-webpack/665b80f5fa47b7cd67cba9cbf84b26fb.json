{"ast":null,"code":"import * as ɵngcc0 from '@angular/core';\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport { InjectionToken, NgZone, PLATFORM_ID, Injectable, Inject, Optional } from '@angular/core';\nimport { of, from } from 'rxjs';\nimport { AngularFirestoreDocument } from './document/document';\nimport { AngularFirestoreCollection } from './collection/collection';\nimport { AngularFirestoreCollectionGroup } from './collection-group/collection-group';\nimport { FIREBASE_OPTIONS, FIREBASE_APP_NAME, _firebaseAppFactory, ɵAngularFireSchedulers, ɵkeepUnstableUntilFirstFactory } from '@angular/fire';\nimport { isPlatformServer } from '@angular/common';\nimport firebase from 'firebase/app';\nexport const EnablePersistenceToken = /*#__PURE__*/new InjectionToken('angularfire2.enableFirestorePersistence');\nexport const PersistenceSettingsToken = /*#__PURE__*/new InjectionToken('angularfire2.firestore.persistenceSettings');\nexport const FirestoreSettingsToken = /*#__PURE__*/new InjectionToken('angularfire2.firestore.settings');\nexport const ENABLE_PERSISTENCE = EnablePersistenceToken;\nexport const PERSISTENCE_SETTINGS = PersistenceSettingsToken;\nexport const SETTINGS = FirestoreSettingsToken;\nconst major = /*#__PURE__*/parseInt( /*#__PURE__*/firebase.SDK_VERSION.split('.')[0]);\nconst minor = /*#__PURE__*/parseInt( /*#__PURE__*/firebase.SDK_VERSION.split('.')[1]);\nexport const DefaultFirestoreSettings = major < 5 || major == 5 && minor < 8 ? {\n  timestampsInSnapshots: true\n} : {};\nexport function associateQuery(collectionRef, queryFn = ref => ref) {\n  const query = queryFn(collectionRef);\n  const ref = collectionRef;\n  return {\n    query,\n    ref\n  };\n}\nlet AngularFirestore = /*#__PURE__*/(() => {\n  let AngularFirestore = class AngularFirestore {\n    constructor(options, nameOrConfig, shouldEnablePersistence, settings, platformId, zone, persistenceSettings) {\n      this.schedulers = new ɵAngularFireSchedulers(zone);\n      this.keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(this.schedulers, platformId);\n      this.firestore = zone.runOutsideAngular(() => {\n        const app = _firebaseAppFactory(options, zone, nameOrConfig);\n\n        const firestore = app.firestore();\n        firestore.settings(settings || DefaultFirestoreSettings);\n        return firestore;\n      });\n\n      if (shouldEnablePersistence && !isPlatformServer(platformId)) {\n        const enablePersistence = () => {\n          try {\n            return from(this.firestore.enablePersistence(persistenceSettings || undefined).then(() => true, () => false));\n          } catch (e) {\n            return of(false);\n          }\n        };\n\n        this.persistenceEnabled$ = zone.runOutsideAngular(enablePersistence);\n      } else {\n        this.persistenceEnabled$ = of(false);\n      }\n    }\n\n    collection(pathOrRef, queryFn) {\n      let collectionRef;\n\n      if (typeof pathOrRef === 'string') {\n        collectionRef = this.firestore.collection(pathOrRef);\n      } else {\n        collectionRef = pathOrRef;\n      }\n\n      const {\n        ref,\n        query\n      } = associateQuery(collectionRef, queryFn);\n      return new AngularFirestoreCollection(ref, query, this);\n    }\n\n    collectionGroup(collectionId, queryGroupFn) {\n      if (major < 6) {\n        throw \"collection group queries require Firebase JS SDK >= 6.0\";\n      }\n\n      const queryFn = queryGroupFn || (ref => ref);\n\n      const firestore = this.firestore;\n      const collectionGroup = firestore.collectionGroup(collectionId);\n      return new AngularFirestoreCollectionGroup(queryFn(collectionGroup), this);\n    }\n\n    doc(pathOrRef) {\n      let ref;\n\n      if (typeof pathOrRef === 'string') {\n        ref = this.firestore.doc(pathOrRef);\n      } else {\n        ref = pathOrRef;\n      }\n\n      return new AngularFirestoreDocument(ref, this);\n    }\n\n    createId() {\n      return this.firestore.collection('_').doc().id;\n    }\n\n  };\n\n  AngularFirestore.ɵfac = function AngularFirestore_Factory(t) {\n    return new (t || AngularFirestore)(ɵngcc0.ɵɵinject(FIREBASE_OPTIONS), ɵngcc0.ɵɵinject(FIREBASE_APP_NAME, 8), ɵngcc0.ɵɵinject(ENABLE_PERSISTENCE, 8), ɵngcc0.ɵɵinject(SETTINGS, 8), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(PERSISTENCE_SETTINGS, 8));\n  };\n\n  AngularFirestore.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: AngularFirestore,\n    factory: function (t) {\n      return AngularFirestore.ɵfac(t);\n    }\n  });\n  AngularFirestore = __decorate([__param(0, Inject(FIREBASE_OPTIONS)), __param(1, Optional()), __param(1, Inject(FIREBASE_APP_NAME)), __param(2, Optional()), __param(2, Inject(ENABLE_PERSISTENCE)), __param(3, Optional()), __param(3, Inject(SETTINGS)), __param(4, Inject(PLATFORM_ID)), __param(6, Optional()), __param(6, Inject(PERSISTENCE_SETTINGS)), __metadata(\"design:paramtypes\", [Object, Object, Object, Object, Object, NgZone, Object])], AngularFirestore);\n  return AngularFirestore;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nexport { AngularFirestore }; //# sourceMappingURL=firestore.js.map","map":null,"metadata":{},"sourceType":"module"}