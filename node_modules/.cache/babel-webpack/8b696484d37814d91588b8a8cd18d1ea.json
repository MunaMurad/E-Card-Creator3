{"ast":null,"code":"var _a;\n\nimport { __awaiter, __decorate, __metadata } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore } from '@angular/fire/firestore'; // import * as firebase from 'firebase';\n// import { Observable } from 'rxjs';\n\nimport { first, map } from 'rxjs/operators';\nlet UserService = class UserService {\n  constructor(firestore, fireAuth, authService) {\n    this.firestore = firestore;\n    this.fireAuth = fireAuth;\n    this.authService = authService;\n    this.userId = \"\";\n    this.userAuth = false;\n    let currentUser = this.authService.getCurrentUser();\n\n    if (this.afAuth.auth.currentUser) {\n      let user = this.afAuth.auth.currentUser.uid;\n    }\n\n    if (currentUser) {\n      this.refreshNotesCollection(currentUser.uid);\n    }\n\n    this.fireAuth.authState.subscribe(user => {\n      if (user) {\n        console.log(\"USERSERVICE.....  auth = true\");\n        this.userId = user.uid;\n        this.userAuth = true;\n        console.log(\"userId=\" + this.userId);\n      } else {\n        console.log(\"USERSERVICE.....  auth = false\"); // Empty the value when user signs out\n\n        this.userId = \"\";\n        this.userAuth = false;\n        console.log(\"userId=\" + this.userId);\n      }\n    });\n  } //**************************************//\n  //******   user authentication    ******//\n  //**************************************//\n  ///https://angularfirebase.com/snippets/check-if-current-user-exists-with-angularfire/\n\n\n  isLoggedIn() {\n    return this.fireAuth.authState.pipe(first()).toPromise();\n  }\n\n  getAuthState() {\n    return __awaiter(this, void 0, void 0, function* () {\n      console.log(\"userService call getAuthState=\" + this.userAuth);\n      return yield this.userAuth;\n    });\n  }\n\n  getUserId() {\n    return this.userId;\n  }\n\n  getConnectedUserId() {\n    this.fireAuth.authState.subscribe(user => {\n      if (user) {\n        console.log(\"USERSERVICE RUNNNNN...  auth 1\");\n        this.userId = user.uid;\n        this.userAuth = true;\n        console.log(\"userService call getUserId=\" + this.userId);\n        return this.userId;\n      } else {\n        console.log(\"USERSERVICE RUNNNNN...  auth 0\"); // Empty the value when user signs out\n\n        this.userId = null;\n        this.userAuth = false;\n        console.log(\"userService call getUserId=\" + this.userId);\n        return this.userId;\n      }\n    });\n  } // async doSomething(): Promise<string>  {\n  //   const user = await this.isLoggedIn()\n  //   if (user) {\n  //     // do something\n  //     this.userId = await user.uid;\n  //     return   this.firestore.doc<any>('userProfile/'+this.userId).valueChanges();\n  //   } else {\n  //     // do something else\n  //   }\n  // }\n  // login\n\n\n  signinUser(newEmail, newPassword) {\n    return this.fireAuth.auth.signInWithEmailAndPassword(newEmail, newPassword);\n  }\n\n  resetPassword(email) {\n    return this.fireAuth.auth.sendPasswordResetEmail(email);\n  }\n\n  signoutUser() {\n    return this.fireAuth.auth.signOut();\n  } // register \n\n\n  signupUser(firstname, lastname, phone, username, password) {\n    return this.fireAuth.auth.createUserWithEmailAndPassword(username, password).then(newUser => {\n      console.log(\"userid=========\" + newUser.user.uid); // firebase.database().ref('/userProfile').child(newUser.uid).set({\n\n      this.firestore.collection('userProfile').doc(newUser.user.uid).set({\n        id: newUser.user.uid,\n        firstname: firstname,\n        lastname: lastname,\n        email: username,\n        image: \"\",\n        phone: phone\n      });\n    });\n  } //*******************************//\n  //******   user profile    ******//\n  //*******************************//\n\n\n  getUserProfile() {\n    //  this.fireAuth.authState.subscribe(user => {\n    //   if (user) {\n    //     //this.userId = user.uid;\n    //     //console.log(\"CALL check user auth________________userService user auth id = \"+ this.userId);\n    //     // set angularfireDoc userfile\n    //    // this.userProfile = this.firestore.doc<any>('userProfile/'+this.userId);\n    //       //######\n    //   }\n    // });\n    console.log(\"userId=\" + this.userId);\n    console.log(\"getUserProfile\");\n    return this.firestore.doc('userProfile/' + this.userId).valueChanges();\n  }\n\n  getUserProfileId() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const user = yield this.isLoggedIn();\n\n      if (user) {\n        // do something\n        this.userId = yield user.uid; //return   this.firestore.doc<any>('userProfile/'+this.userId).valueChanges();\n      } else {\n        // do something else\n        console.log(\"++++++++No userId\" + this.userId);\n      }\n\n      console.log(\"++++++++++getUserProfileId = \" + this.userId);\n      return this.userId;\n    });\n  }\n\n  updateUserProfile(firstname, lastname, phone, email) {\n    return this.firestore.doc('userProfile/' + this.userId).update({\n      firstname: firstname,\n      lastname: lastname,\n      phone: phone,\n      email: email\n    });\n  } //*******************************//\n  //******   user address    ******//\n  //*******************************//\n\n\n  getAddressByUserId() {\n    console.log(\"_____getAddressByUserId=\");\n    return this.firestore.collection('/userAddress', ref => ref.where('userProfileId', '==', this.userId)).snapshotChanges().pipe(map(actions => {\n      return actions.map(a => {\n        const data = a.payload.doc.data();\n        const id = a.payload.doc.id;\n        console.log(\"####get a group of countries=\" + data);\n        return Object.assign({\n          id\n        }, data);\n      });\n    }));\n  }\n\n  getAddressById(addressId) {\n    console.log(\"_______getAddressById\");\n    return this.firestore.doc('userAddress/' + addressId).valueChanges();\n  }\n\n  addAddress(label, fullname, phone, address) {\n    console.log(\"___addAddress=\");\n    return this.firestore.collection('userAddress').add({\n      userProfileId: this.userId,\n      label: label,\n      fullname: fullname,\n      phone: phone,\n      address: address //createdTime: new Date()\n\n    });\n  }\n\n  editAddress(addressId, title, fullname, phone, address) {\n    console.log(\"addressId=\" + addressId);\n    return this.firestore.doc('userAddress/' + addressId).update({\n      label: title,\n      fullname: fullname,\n      phone: phone,\n      address: address\n    });\n  }\n\n  deleteAddress(addressId) {\n    return this.firestore.doc('userAddress/' + addressId).delete();\n  }\n\n};\nUserService = __decorate([Injectable({\n  providedIn: 'root'\n}), __metadata(\"design:paramtypes\", [AngularFirestore, AngularFireAuth, typeof (_a = typeof AuthService !== \"undefined\" && AuthService) === \"function\" ? _a : Object])], UserService);\nexport { UserService };","map":null,"metadata":{},"sourceType":"module"}