{"ast":null,"code":"import { from } from 'rxjs';\nimport { fromDocRef } from '../observable/fromRef';\nimport { map, observeOn } from 'rxjs/operators';\nimport { associateQuery } from '../firestore';\nimport { AngularFirestoreCollection } from '../collection/collection';\nexport class AngularFirestoreDocument {\n  constructor(ref, afs) {\n    this.ref = ref;\n    this.afs = afs;\n  }\n\n  set(data, options) {\n    return this.ref.set(data, options);\n  }\n\n  update(data) {\n    return this.ref.update(data);\n  }\n\n  delete() {\n    return this.ref.delete();\n  }\n\n  collection(path, queryFn) {\n    const collectionRef = this.ref.collection(path);\n    const {\n      ref,\n      query\n    } = associateQuery(collectionRef, queryFn);\n    return new AngularFirestoreCollection(ref, query, this.afs);\n  }\n\n  snapshotChanges() {\n    const scheduledFromDocRef$ = fromDocRef(this.ref, this.afs.schedulers.outsideAngular);\n    return scheduledFromDocRef$.pipe(this.afs.keepUnstableUntilFirst);\n  }\n\n  valueChanges() {\n    return this.snapshotChanges().pipe(map(action => {\n      return action.payload.data();\n    }));\n  }\n\n  get(options) {\n    return from(this.ref.get(options)).pipe(observeOn(this.afs.schedulers.insideAngular));\n  }\n\n} //# sourceMappingURL=document.js.map","map":null,"metadata":{},"sourceType":"module"}