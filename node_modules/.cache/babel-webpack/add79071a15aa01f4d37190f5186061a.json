{"ast":null,"code":"import { MenuController } from \"@ionic/angular\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\n\nconst _c0 = function (a0) {\n  return {\n    \"background-color\": a0\n  };\n};\n\nfunction WalkthroughPage_ion_slide_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-slide\", 14);\n    i0.ɵɵelementStart(1, \"div\", 15);\n    i0.ɵɵelement(2, \"img\", 16);\n    i0.ɵɵelement(3, \"h2\", 17);\n    i0.ɵɵelement(4, \"p\", 18);\n    i0.ɵɵelementStart(5, \"div\");\n    i0.ɵɵelementStart(6, \"ion-button\", 19);\n    i0.ɵɵlistener(\"click\", function WalkthroughPage_ion_slide_9_Template_ion_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n\n      const _r0 = i0.ɵɵreference(8);\n\n      return ctx_r3.moveToNext(_r0);\n    });\n    i0.ɵɵelement(7, \"ion-icon\", 20);\n    i0.ɵɵelementStart(8, \"ion-label\", 21);\n    i0.ɵɵtext(9, \" \\u0627\\u0644\\u062A\\u0627\\u0644\\u064A\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const slide_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(4, _c0, slide_r2.color));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", slide_r2.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", slide_r2.title, i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", slide_r2.description, i0.ɵɵsanitizeHtml);\n  }\n}\n\nexport let WalkthroughPage = /*#__PURE__*/(() => {\n  class WalkthroughPage {\n    constructor(menuCtrl) {\n      this.menuCtrl = menuCtrl;\n      this.slideLeftRight = {\n        initialSlide: 1,\n        speed: 400\n      }; //************ COVERFLOW effect **********/\n\n      this.slideCoverflow = {\n        slidesPerView: 1,\n        coverflowEffect: {\n          rotate: 50,\n          stretch: 0,\n          depth: 100,\n          modifier: 1,\n          slideShadows: true\n        },\n        on: {\n          beforeInit() {\n            const swiper = this;\n            swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n            swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n            swiper.params.watchSlidesProgress = true;\n            swiper.originalParams.watchSlidesProgress = true;\n          },\n\n          setTranslate() {\n            const swiper = this;\n            const {\n              width: swiperWidth,\n              height: swiperHeight,\n              slides,\n              $wrapperEl,\n              slidesSizesGrid,\n              $\n            } = swiper;\n            const params = swiper.params.coverflowEffect;\n            const isHorizontal = swiper.isHorizontal();\n            const transform$$1 = swiper.translate;\n            const center = isHorizontal ? -transform$$1 + swiperWidth / 2 : -transform$$1 + swiperHeight / 2;\n            const rotate = isHorizontal ? params.rotate : -params.rotate;\n            const translate = params.depth; // Each slide offset from center\n\n            for (let i = 0, length = slides.length; i < length; i += 1) {\n              const $slideEl = slides.eq(i);\n              const slideSize = slidesSizesGrid[i];\n              const slideOffset = $slideEl[0].swiperSlideOffset;\n              const offsetMultiplier = (center - slideOffset - slideSize / 2) / slideSize * params.modifier;\n              let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n              let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier; // var rotateZ = 0\n\n              let translateZ = -translate * Math.abs(offsetMultiplier);\n              let translateY = isHorizontal ? 0 : params.stretch * offsetMultiplier;\n              let translateX = isHorizontal ? params.stretch * offsetMultiplier : 0; // Fix for ultra small values\n\n              if (Math.abs(translateX) < 0.001) translateX = 0;\n              if (Math.abs(translateY) < 0.001) translateY = 0;\n              if (Math.abs(translateZ) < 0.001) translateZ = 0;\n              if (Math.abs(rotateY) < 0.001) rotateY = 0;\n              if (Math.abs(rotateX) < 0.001) rotateX = 0;\n              const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n              $slideEl.transform(slideTransform);\n              $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n\n              if (params.slideShadows) {\n                // Set shadows\n                let $shadowBeforeEl = isHorizontal ? $slideEl.find(\".swiper-slide-shadow-left\") : $slideEl.find(\".swiper-slide-shadow-top\");\n                let $shadowAfterEl = isHorizontal ? $slideEl.find(\".swiper-slide-shadow-right\") : $slideEl.find(\".swiper-slide-shadow-bottom\");\n\n                if ($shadowBeforeEl.length === 0) {\n                  $shadowBeforeEl = swiper.$(`<div class=\"swiper-slide-shadow-${isHorizontal ? \"left\" : \"top\"}\"></div>`);\n                  $slideEl.append($shadowBeforeEl);\n                }\n\n                if ($shadowAfterEl.length === 0) {\n                  $shadowAfterEl = swiper.$(`<div class=\"swiper-slide-shadow-${isHorizontal ? \"right\" : \"bottom\"}\"></div>`);\n                  $slideEl.append($shadowAfterEl);\n                }\n\n                if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n                if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n              }\n            } // Set correct perspective for IE10\n\n\n            if (swiper.support.pointerEvents || swiper.support.prefixedPointerEvents) {\n              const ws = $wrapperEl[0].style;\n              ws.perspectiveOrigin = `${center}px 50%`;\n            }\n          },\n\n          setTransition(duration) {\n            const swiper = this;\n            swiper.slides.transition(duration).find(\".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left\").transition(duration);\n          }\n\n        }\n      }; //************ CUBE effect ***********//\n\n      this.slideCube = {\n        grabCursor: true,\n        cubeEffect: {\n          shadow: true,\n          slideShadows: true,\n          shadowOffset: 20,\n          shadowScale: 0.94\n        },\n        on: {\n          beforeInit: function () {\n            const swiper = this;\n            swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n            swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n            const overwriteParams = {\n              slidesPerView: 1,\n              slidesPerColumn: 1,\n              slidesPerGroup: 1,\n              watchSlidesProgress: true,\n              resistanceRatio: 0,\n              spaceBetween: 0,\n              centeredSlides: false,\n              virtualTranslate: true\n            };\n            this.params = Object.assign(this.params, overwriteParams);\n            this.originalParams = Object.assign(this.originalParams, overwriteParams);\n          },\n          setTranslate: function () {\n            const swiper = this;\n            const {\n              $el,\n              $wrapperEl,\n              slides,\n              width: swiperWidth,\n              height: swiperHeight,\n              rtlTranslate: rtl,\n              size: swiperSize\n            } = swiper;\n            const params = swiper.params.cubeEffect;\n            const isHorizontal = swiper.isHorizontal();\n            const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n            let wrapperRotate = 0;\n            let $cubeShadowEl;\n\n            if (params.shadow) {\n              if (isHorizontal) {\n                $cubeShadowEl = $wrapperEl.find(\".swiper-cube-shadow\");\n\n                if ($cubeShadowEl.length === 0) {\n                  $cubeShadowEl = swiper.$('<div class=\"swiper-cube-shadow\"></div>');\n                  $wrapperEl.append($cubeShadowEl);\n                }\n\n                $cubeShadowEl.css({\n                  height: `${swiperWidth}px`\n                });\n              } else {\n                $cubeShadowEl = $el.find(\".swiper-cube-shadow\");\n\n                if ($cubeShadowEl.length === 0) {\n                  $cubeShadowEl = swiper.$('<div class=\"swiper-cube-shadow\"></div>');\n                  $el.append($cubeShadowEl);\n                }\n              }\n            }\n\n            for (let i = 0; i < slides.length; i += 1) {\n              const $slideEl = slides.eq(i);\n              let slideIndex = i;\n\n              if (isVirtual) {\n                slideIndex = parseInt($slideEl.attr(\"data-swiper-slide-index\"), 10);\n              }\n\n              let slideAngle = slideIndex * 90;\n              let round = Math.floor(slideAngle / 360);\n\n              if (rtl) {\n                slideAngle = -slideAngle;\n                round = Math.floor(-slideAngle / 360);\n              }\n\n              const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n              let tx = 0;\n              let ty = 0;\n              let tz = 0;\n\n              if (slideIndex % 4 === 0) {\n                tx = -round * 4 * swiperSize;\n                tz = 0;\n              } else if ((slideIndex - 1) % 4 === 0) {\n                tx = 0;\n                tz = -round * 4 * swiperSize;\n              } else if ((slideIndex - 2) % 4 === 0) {\n                tx = swiperSize + round * 4 * swiperSize;\n                tz = swiperSize;\n              } else if ((slideIndex - 3) % 4 === 0) {\n                tx = -swiperSize;\n                tz = 3 * swiperSize + swiperSize * 4 * round;\n              }\n\n              if (rtl) {\n                tx = -tx;\n              }\n\n              if (!isHorizontal) {\n                ty = tx;\n                tx = 0;\n              }\n\n              const transform$$1 = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n\n              if (progress <= 1 && progress > -1) {\n                wrapperRotate = slideIndex * 90 + progress * 90;\n                if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n              }\n\n              $slideEl.transform(transform$$1);\n\n              if (params.slideShadows) {\n                // Set shadows\n                let shadowBefore = isHorizontal ? $slideEl.find(\".swiper-slide-shadow-left\") : $slideEl.find(\".swiper-slide-shadow-top\");\n                let shadowAfter = isHorizontal ? $slideEl.find(\".swiper-slide-shadow-right\") : $slideEl.find(\".swiper-slide-shadow-bottom\");\n\n                if (shadowBefore.length === 0) {\n                  shadowBefore = swiper.$(`<div class=\"swiper-slide-shadow-${isHorizontal ? \"left\" : \"top\"}\"></div>`);\n                  $slideEl.append(shadowBefore);\n                }\n\n                if (shadowAfter.length === 0) {\n                  shadowAfter = swiper.$(`<div class=\"swiper-slide-shadow-${isHorizontal ? \"right\" : \"bottom\"}\"></div>`);\n                  $slideEl.append(shadowAfter);\n                }\n\n                if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n                if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n              }\n            }\n\n            $wrapperEl.css({\n              \"-webkit-transform-origin\": `50% 50% -${swiperSize / 2}px`,\n              \"-moz-transform-origin\": `50% 50% -${swiperSize / 2}px`,\n              \"-ms-transform-origin\": `50% 50% -${swiperSize / 2}px`,\n              \"transform-origin\": `50% 50% -${swiperSize / 2}px`\n            });\n\n            if (params.shadow) {\n              if (isHorizontal) {\n                $cubeShadowEl.transform(`translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n              } else {\n                const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n                const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n                const scale1 = params.shadowScale;\n                const scale2 = params.shadowScale / multiplier;\n                const offset$$1 = params.shadowOffset;\n                $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset$$1}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n              }\n            }\n\n            const zFactor = swiper.browser.isSafari || swiper.browser.isUiWebView ? -swiperSize / 2 : 0;\n            $wrapperEl.transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n          },\n          setTransition: function (duration) {\n            const swiper = this;\n            const {\n              $el,\n              slides\n            } = swiper;\n            slides.transition(duration).find(\".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left\").transition(duration);\n\n            if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n              $el.find(\".swiper-cube-shadow\").transition(duration);\n            }\n          }\n        }\n      }; //************ FADE effect ***********//\n\n      this.slideFade = {\n        on: {\n          beforeInit() {\n            const swiper = this;\n            swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n            const overwriteParams = {\n              slidesPerView: 1,\n              slidesPerColumn: 1,\n              slidesPerGroup: 1,\n              watchSlidesProgress: true,\n              spaceBetween: 0,\n              virtualTranslate: true\n            };\n            swiper.params = Object.assign(swiper.params, overwriteParams);\n            swiper.params = Object.assign(swiper.originalParams, overwriteParams);\n          },\n\n          setTranslate() {\n            const swiper = this;\n            const {\n              slides\n            } = swiper;\n\n            for (let i = 0; i < slides.length; i += 1) {\n              const $slideEl = swiper.slides.eq(i);\n              const offset$$1 = $slideEl[0].swiperSlideOffset;\n              let tx = -offset$$1;\n              if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n              let ty = 0;\n\n              if (!swiper.isHorizontal()) {\n                ty = tx;\n                tx = 0;\n              }\n\n              const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs($slideEl[0].progress), 0) : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n              $slideEl.css({\n                opacity: slideOpacity\n              }).transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n            }\n          },\n\n          setTransition(duration) {\n            const swiper = this;\n            const {\n              slides,\n              $wrapperEl\n            } = swiper;\n            slides.transition(duration);\n\n            if (swiper.params.virtualTranslate && duration !== 0) {\n              let eventTriggered = false;\n              slides.transitionEnd(() => {\n                if (eventTriggered) return;\n                if (!swiper || swiper.destroyed) return;\n                eventTriggered = true;\n                swiper.animating = false;\n                const triggerEvents = [\"webkitTransitionEnd\", \"transitionend\"];\n\n                for (let i = 0; i < triggerEvents.length; i += 1) {\n                  $wrapperEl.trigger(triggerEvents[i]);\n                }\n              });\n            }\n          }\n\n        }\n      }; //************ FLIP effect ***********//\n\n      this.slideFlip = {\n        on: {\n          beforeInit() {\n            const swiper = this;\n            swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n            swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n            const overwriteParams = {\n              slidesPerView: 1,\n              slidesPerColumn: 1,\n              slidesPerGroup: 1,\n              watchSlidesProgress: true,\n              spaceBetween: 0,\n              virtualTranslate: true\n            };\n            swiper.params = Object.assign(swiper.params, overwriteParams);\n            swiper.originalParams = Object.assign(swiper.originalParams, overwriteParams);\n          },\n\n          setTranslate() {\n            const swiper = this;\n            const {\n              $,\n              slides,\n              rtlTranslate: rtl\n            } = swiper;\n\n            for (let i = 0; i < slides.length; i += 1) {\n              const $slideEl = slides.eq(i);\n              let progress = $slideEl[0].progress;\n\n              if (swiper.params.flipEffect.limitRotation) {\n                progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n              }\n\n              const offset$$1 = $slideEl[0].swiperSlideOffset;\n              const rotate = -180 * progress;\n              let rotateY = rotate;\n              let rotateX = 0;\n              let tx = -offset$$1;\n              let ty = 0;\n\n              if (!swiper.isHorizontal()) {\n                ty = tx;\n                tx = 0;\n                rotateX = -rotateY;\n                rotateY = 0;\n              } else if (rtl) {\n                rotateY = -rotateY;\n              }\n\n              $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n              if (swiper.params.flipEffect.slideShadows) {\n                // Set shadows\n                let shadowBefore = swiper.isHorizontal() ? $slideEl.find(\".swiper-slide-shadow-left\") : $slideEl.find(\".swiper-slide-shadow-top\");\n                let shadowAfter = swiper.isHorizontal() ? $slideEl.find(\".swiper-slide-shadow-right\") : $slideEl.find(\".swiper-slide-shadow-bottom\");\n\n                if (shadowBefore.length === 0) {\n                  shadowBefore = swiper.$(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? \"left\" : \"top\"}\"></div>`);\n                  $slideEl.append(shadowBefore);\n                }\n\n                if (shadowAfter.length === 0) {\n                  shadowAfter = swiper.$(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? \"right\" : \"bottom\"}\"></div>`);\n                  $slideEl.append(shadowAfter);\n                }\n\n                if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n                if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n              }\n\n              $slideEl.transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n            }\n          },\n\n          setTransition(duration) {\n            const swiper = this;\n            const {\n              slides,\n              activeIndex,\n              $wrapperEl\n            } = swiper;\n            slides.transition(duration).find(\".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left\").transition(duration);\n\n            if (swiper.params.virtualTranslate && duration !== 0) {\n              let eventTriggered = false; // eslint-disable-next-line\n\n              slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n                if (eventTriggered) return;\n                if (!swiper || swiper.destroyed) return;\n                eventTriggered = true;\n                swiper.animating = false;\n                const triggerEvents = [\"webkitTransitionEnd\", \"transitionend\"];\n\n                for (let i = 0; i < triggerEvents.length; i += 1) {\n                  $wrapperEl.trigger(triggerEvents[i]);\n                }\n              });\n            }\n          }\n\n        }\n      }; //************ Slides ***********//\n\n      this.slides = [{\n        title: \"E-Card Creator\",\n        description: \"تطبيق متخصص في انشاء البطاقات الإلكترونية الفريدة و المتميزة\",\n        image: \"../assets/copy_84080478.png\",\n        color: \"#dbb2ad\"\n      }, {\n        title: \"خيارات مشاركة متعددة\",\n        description: \"تمكنك من مشاركة الجميع ببطاقتك الإلكترونية..\",\n        image: \"https://firebasestorage.googleapis.com/v0/b/ionic5fullapp-4d4bb.appspot.com/o/undraw_online_connection_6778.svg?alt=media&token=7d420b1e-cbcb-4956-8a8b-5ed26b7d8de7\",\n        color: \"#fab8c7 \"\n      }, {\n        title: \"بأسلوب عصري و خطوات بسيطة\",\n        description: \"ستجد تصاميم و خيارات و عبارات متنوعة لتنشئ بطاقة متألقة  \",\n        image: \"https://firebasestorage.googleapis.com/v0/b/ionic4firebase-2c0e6.appspot.com/o/undraw_start_building_vqhd.svg?alt=media&token=509089ba-29c0-4dc5-a368-0cf1a9db6c93\",\n        color: \" #edbaff\"\n      }, {\n        title: \"ستجد بطاقات مكتوبة\",\n        description: \"خيار يتيح لك اختصار وقتك و إنجاز بطاقتك بسرعة\",\n        image: \"https://firebasestorage.googleapis.com/v0/b/ionic4firebase-2c0e6.appspot.com/o/undraw_design_sprint_x3eb.svg?alt=media&token=d6d88aae-d80b-48ec-bb2e-2221fb19de3d\",\n        color: \" #f2ccbf\",\n        background: \"../../../assets/eberhard-grossgasteiger-TRE0n2_rQIU-unsplash.jpg\"\n      }];\n    }\n\n    moveToNext(slides) {\n      console.log(slides);\n      slides.slideNext();\n    }\n\n    toggleSideMenu() {\n      console.log(\"call toggleSideMenu \");\n      this.menuCtrl.toggle(); //Add this method to your button click function\n    }\n\n    ngOnInit() {}\n\n  }\n\n  WalkthroughPage.ɵfac = function WalkthroughPage_Factory(t) {\n    return new (t || WalkthroughPage)(i0.ɵɵdirectiveInject(i1.MenuController));\n  };\n\n  WalkthroughPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WalkthroughPage,\n    selectors: [[\"app-walkthrough\"]],\n    decls: 20,\n    vars: 2,\n    consts: [[\"fullscreen\", \"true\", 1, \"tutorial-page\"], [\"slot\", \"fixed\", 1, \"ion-no-border\"], [1, \"first\"], [\"color\", \"facebook\", \"slot\", \"start\"], [\"color\", \"facebook\", 3, \"click\"], [\"slot\", \"icon-only\", \"ios\", \"apps-outline\", \"size\", \"small\", \"md\", \"call-sharp\"], [\"pager\", \"true\", 3, \"options\"], [\"slidesOne\", \"\"], [3, \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [1, \"lastslide\"], [\"margin-top\", \"\", 1, \"introBox\"], [1, \"slide-title\", \"main-b-header6\"], [\"mode\", \"ios\", \"color\", \"facebook\", \"expand\", \"block\", \"routerLink\", \"/fire-signin\", \"size\", \"large\"], [\"mode\", \"ios\", \"color\", \"facebook\", \"expand\", \"block\", \"size\", \"large\", 3, \"click\"], [3, \"ngStyle\"], [1, \"intro-box\"], [1, \"pop-in\", \"slide-image\", 3, \"src\"], [1, \"slide-title\", \"main-b-header6\", 3, \"innerHTML\"], [3, \"innerHTML\"], [\"color\", \"facebook\", \"fill\", \"clear\", \"size\", \"\", 3, \"click\"], [\"slot\", \"end\", \"name\", \"arrow-forward-circle-outline\", \"size\", \"\"], [\"slot\", \"start\"]],\n    template: function WalkthroughPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-content\", 0);\n        i0.ɵɵelementStart(1, \"ion-header\", 1);\n        i0.ɵɵelementStart(2, \"ion-toolbar\", 2);\n        i0.ɵɵelementStart(3, \"ion-buttons\", 3);\n        i0.ɵɵelementStart(4, \"ion-button\", 4);\n        i0.ɵɵlistener(\"click\", function WalkthroughPage_Template_ion_button_click_4_listener() {\n          return ctx.toggleSideMenu();\n        });\n        i0.ɵɵelement(5, \"ion-icon\", 5);\n        i0.ɵɵtext(6, \" \\u00A0 \\u00A0\\u062A\\u062E\\u0637\\u064A \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"ion-slides\", 6, 7);\n        i0.ɵɵtemplate(9, WalkthroughPage_ion_slide_9_Template, 10, 6, \"ion-slide\", 8);\n        i0.ɵɵelementStart(10, \"ion-slide\", 9);\n        i0.ɵɵelementStart(11, \"div\", 10);\n        i0.ɵɵelementStart(12, \"h1\", 11);\n        i0.ɵɵtext(13, \" \\u062A\\u0633\\u062C\\u064A\\u0644 \\u0627\\u0644\\u062F\\u062E\\u0648\\u0644: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"ion-button\", 12);\n        i0.ɵɵtext(15, \" \\u0627\\u0636\\u063A\\u0637 \\u0647\\u0646\\u0627 \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"h1\", 11);\n        i0.ɵɵtext(17, \" \\u0627\\u0633\\u062A\\u062E\\u062F\\u0627\\u0645 \\u0627\\u0644\\u062A\\u0637\\u0628\\u064A\\u0642 \\u0628\\u062F\\u0648\\u0646 \\u062A\\u0633\\u062C\\u064A\\u0644 \\u0627\\u0644\\u062F\\u062E\\u0648\\u0644: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"ion-button\", 13);\n        i0.ɵɵlistener(\"click\", function WalkthroughPage_Template_ion_button_click_18_listener() {\n          return ctx.toggleSideMenu();\n        });\n        i0.ɵɵtext(19, \" \\u0627\\u0636\\u063A\\u0637 \\u0647\\u0646\\u0627 \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"options\", ctx.slideCube);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.slides);\n      }\n    },\n    directives: [i1.IonContent, i1.IonHeader, i1.IonToolbar, i1.IonButtons, i1.IonButton, i1.IonIcon, i1.IonSlides, i2.NgForOf, i1.IonSlide, i1.RouterLinkDelegate, i3.RouterLink, i2.NgStyle, i1.IonLabel],\n    styles: [\"ion-slides[_ngcontent-%COMP%]{height:100%;width:100%}.image-slide[_ngcontent-%COMP%]{max-width:100vw!important;max-height:100vh!important}.intro-box[_ngcontent-%COMP%]{padding-top:3vh}.swiper-pagination-bullet-active[_ngcontent-%COMP%]{background:#ccc}.slide-zoom[_ngcontent-%COMP%]{height:100%}.slide-title[_ngcontent-%COMP%]{margin-top:2.8rem;background-color:#ffffff42}.slide-image[_ngcontent-%COMP%]{margin:18px 0}.swiper-slide[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:auto;max-width:70%;height:auto;max-height:70%}b[_ngcontent-%COMP%]{font-weight:500}h1[_ngcontent-%COMP%]{color:#2c1e1e;font-weight:300!important;font-size:24px!important}h2[_ngcontent-%COMP%]{color:#2c1e1e;font-weight:300!important;font-size:24px!important}h1[_ngcontent-%COMP%]{color:#333!important;font-weight:300!important;font-size:24px!important}h3[_ngcontent-%COMP%]{color:#333!important;font-weight:300!important;font-size:24px!important}p[_ngcontent-%COMP%]{padding:0 40px;font-weight:300!important;font-size:.9em;line-height:1.5;color:#332424}p[_ngcontent-%COMP%]   b[_ngcontent-%COMP%]{color:#ffeb3b}ion-toolbar.first[_ngcontent-%COMP%]{--background: transparent;--ion-color-base: transparent !important}ion-slides[_ngcontent-%COMP%]{--bullet-background: #fff !important;--bullet-background-activ: #ffeb3b !important;--progress-bar-background: #fff !important;--progress-bar-background-active: #ffeb3b !important;--background: none;background-position:center center;background-size:fixed;background-repeat:no-repeat;background-image:url(\\\"WhatsApp Image 2021-10-06 at 7.26.32 AM.jpeg\\\")}\"]\n  });\n  return WalkthroughPage;\n})();","map":null,"metadata":{},"sourceType":"module"}