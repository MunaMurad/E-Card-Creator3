{"ast":null,"code":"import { Observable, asyncScheduler } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nfunction _fromRef(ref, scheduler = asyncScheduler) {\n  return new Observable(subscriber => {\n    let unsubscribe;\n\n    if (scheduler != null) {\n      scheduler.schedule(() => {\n        unsubscribe = ref.onSnapshot(subscriber);\n      });\n    } else {\n      unsubscribe = ref.onSnapshot(subscriber);\n    }\n\n    return function () {\n      if (unsubscribe != null) {\n        unsubscribe();\n      }\n    };\n  });\n}\n\nexport function fromRef(ref, scheduler) {\n  return _fromRef(ref, scheduler);\n}\nexport function fromDocRef(ref, scheduler) {\n  return fromRef(ref, scheduler).pipe(map(payload => ({\n    payload,\n    type: 'value'\n  })));\n}\nexport function fromCollectionRef(ref, scheduler) {\n  return fromRef(ref, scheduler).pipe(map(payload => ({\n    payload,\n    type: 'query'\n  })));\n} //# sourceMappingURL=fromRef.js.map","map":null,"metadata":{},"sourceType":"module"}