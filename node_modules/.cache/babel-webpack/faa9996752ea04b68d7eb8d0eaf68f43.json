{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { ElementRef } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = [\"video\"];\n\nfunction QRScannerPage_ion_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-button\", 1);\n    i0.ɵɵlistener(\"click\", function QRScannerPage_ion_button_8_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.reset();\n    });\n    i0.ɵɵelement(1, \"ion-icon\", 7);\n    i0.ɵɵtext(2, \" Reset \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction QRScannerPage_ion_button_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-button\", 1);\n    i0.ɵɵlistener(\"click\", function QRScannerPage_ion_button_11_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.stopScan();\n    });\n    i0.ɵɵelement(1, \"ion-icon\", 8);\n    i0.ɵɵtext(2, \" Stop scan \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction QRScannerPage_ion_card_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\");\n    i0.ɵɵelementStart(1, \"ion-card-header\");\n    i0.ɵɵelementStart(2, \"ion-card-title\");\n    i0.ɵɵtext(3, \" QR code \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ion-card-content\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.scanResult, \" \");\n  }\n}\n\nexport let QRScannerPage = /*#__PURE__*/(() => {\n  class QRScannerPage {\n    constructor(toastCtrl) {\n      this.toastCtrl = toastCtrl;\n      this.scanResult = null;\n      this.scanActive = false;\n    }\n\n    ngAfterViewInit() {\n      this.videoElement = this.video.nativeElement;\n    }\n\n    startScan() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const stream = yield navigator.mediaDevices.getUserMedia({\n          video: {\n            facingMode: 'environment'\n          }\n        });\n        this.videoElement.srcObject = stream;\n        this.videoElement.setAttribute('playsinline', true);\n        this.videoElement.play();\n      });\n    }\n\n    reset() {\n      this.scanResult = null;\n    }\n\n    stopScan() {\n      this.scanActive = false;\n    }\n\n    showQrToast() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const toast = yield this.toastCtrl.create({\n          message: 'Open $(this.scanResult)?',\n          position: 'top',\n          buttons: [{\n            text: 'Open',\n            handler: () => {\n              window.open(this.scanResult, '_system', 'location=yes');\n            }\n          }]\n        });\n        toast.present();\n      });\n    }\n\n    ngOnInit() {}\n\n  }\n\n  QRScannerPage.ɵfac = function QRScannerPage_Factory(t) {\n    return new (t || QRScannerPage)(i0.ɵɵdirectiveInject(i1.ToastController));\n  };\n\n  QRScannerPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: QRScannerPage,\n    selectors: [[\"app-qr-scanner\"]],\n    viewQuery: function QRScannerPage_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.video = _t.first);\n      }\n    },\n    decls: 13,\n    vars: 4,\n    consts: [[\"color\", \"amethyst\"], [\"expand\", \"full\", \"color\", \"amethyst\", 3, \"click\"], [\"slot\", \"start\", \"name\", \"qr-scanner\"], [\"expand\", \"full\", \"color\", \"amethyst\", 3, \"click\", 4, \"ngIf\"], [\"width\", \"100%\", 3, \"hidden\"], [\"video\", \"\"], [4, \"ngIf\"], [\"slot\", \"start\", \"name\", \"refresh\"], [\"slot\", \"start\", \"name\", \"close\"]],\n    template: function QRScannerPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\");\n        i0.ɵɵelementStart(1, \"ion-toolbar\", 0);\n        i0.ɵɵelementStart(2, \"ion-title\");\n        i0.ɵɵtext(3, \"QR-scanner\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-content\");\n        i0.ɵɵelementStart(5, \"ion-button\", 1);\n        i0.ɵɵlistener(\"click\", function QRScannerPage_Template_ion_button_click_5_listener() {\n          return ctx.startScan();\n        });\n        i0.ɵɵelement(6, \"ion-icon\", 2);\n        i0.ɵɵtext(7, \" Start Scan \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, QRScannerPage_ion_button_8_Template, 3, 0, \"ion-button\", 3);\n        i0.ɵɵelement(9, \"video\", 4, 5);\n        i0.ɵɵtemplate(11, QRScannerPage_ion_button_11_Template, 3, 0, \"ion-button\", 3);\n        i0.ɵɵtemplate(12, QRScannerPage_ion_card_12_Template, 6, 1, \"ion-card\", 6);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.scanResult);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"hidden\", !ctx.scanActive);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.scanActive);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.scanResult);\n      }\n    },\n    directives: [i1.IonHeader, i1.IonToolbar, i1.IonTitle, i1.IonContent, i1.IonButton, i1.IonIcon, i2.NgIf, i1.IonCard, i1.IonCardHeader, i1.IonCardTitle, i1.IonCardContent],\n    styles: [\"\"]\n  });\n  return QRScannerPage;\n})();","map":null,"metadata":{},"sourceType":"module"}